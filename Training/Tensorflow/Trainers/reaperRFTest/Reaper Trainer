{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Reaper Trainer","provenance":[{"file_id":"1uF_dQKGaynzlWEFt7TDrNydrb4xqPXBO","timestamp":1595991315510},{"file_id":"1sLqFKVV94wm-lglFq_0kGo2ciM0kecWD","timestamp":1595884756937}],"collapsed_sections":["R7nzK1cRf-Ua","XxPj_QV43qD5","4Vk2146Ogil3"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"R7nzK1cRf-Ua","colab_type":"text"},"source":["#Training Setup\n","Setup variables for training and authorize Google Drive\n"]},{"cell_type":"code","metadata":{"id":"4BHckYVigKLI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":128},"executionInfo":{"status":"ok","timestamp":1596084991961,"user_tz":240,"elapsed":62088,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"2779a54a-bac6-4420-a6f3-bf11b36ff6be"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YUd2wtfrqedy","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596084991965,"user_tz":240,"elapsed":62068,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["# NOTE: Update these TFRecord names from \"cells\" and \"cells_label_map\" to your files!\n","test_record_fname = '/content/drive/My Drive/reaperRFTest/test/reaper.tfrecord'\n","train_record_fname = '/content/drive/My Drive/reaperRFTest/train/reaper.tfrecord'\n","label_map_pbtxt_fname = '/content/drive/My Drive/reaperRFTest/test/reaper_label_map.pbtxt'"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"0snKjP6NhDyD","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596084992960,"user_tz":240,"elapsed":63056,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["batch_size = 8\n","chosen_model = 'efficientdet-d0'\n","num_steps = 10 #The more steps, the longer the training. Increase if your loss function is still decreasing and validation metrics are increasing. \n","num_eval_steps = 10 #Perform evaluation after so many steps\n","!mkdir '/content/drive/My Drive/reaperRFTest/working'\n","model_dir = '/content/drive/My\\ Drive/reaperRFTest/working'\n","model__dir = '/content/drive/My Drive/reaperRFTest/working'"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"kcR4PWC3KBau","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1596084996055,"user_tz":240,"elapsed":66143,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"d86a19ad-0f68-4a0d-98e0-a72adb87a3f2"},"source":[" \n","%mkdir /content/test/\n","\n","!cp -a '/content/drive/My Drive/reaperRFTest/images/test/.' \"/content/test/\"\n","!ls"],"execution_count":4,"outputs":[{"output_type":"stream","text":["cp: cannot stat '/content/drive/My Drive/reaperRFTest/images/test/.': No such file or directory\n","drive  sample_data  test\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EEVh6sfHsPtc","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596084996059,"user_tz":240,"elapsed":66143,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["#Save Pipeline config \n","#"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"l7EOtpvlLeS0","colab_type":"text"},"source":["# Install TensorFlow2 Object Detection Dependencies"]},{"cell_type":"code","metadata":{"id":"FNNfNcSELAkU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":782},"executionInfo":{"status":"ok","timestamp":1596085093373,"user_tz":240,"elapsed":163448,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"cc3f2265-caed-4fb4-8123-b94242157375"},"source":["#we will utilize the GPU in this tutorial. \n","#TPU configuration is recommended for faster training on larger datsets\n","!pip install -U --pre tensorflow_gpu==\"2.2.0\""],"execution_count":6,"outputs":[{"output_type":"stream","text":["Collecting tensorflow_gpu==2.2.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/31/bf/c28971266ca854a64f4b26f07c4112ddd61f30b4d1f18108b954a746f8ea/tensorflow_gpu-2.2.0-cp36-cp36m-manylinux2010_x86_64.whl (516.2MB)\n","\u001b[K     |████████████████████████████████| 516.2MB 32kB/s \n","\u001b[?25hRequirement already satisfied, skipping upgrade: astunparse==1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (1.6.3)\n","Requirement already satisfied, skipping upgrade: keras-preprocessing>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (1.1.2)\n","Requirement already satisfied, skipping upgrade: absl-py>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (0.9.0)\n","Requirement already satisfied, skipping upgrade: wrapt>=1.11.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (1.12.1)\n","Requirement already satisfied, skipping upgrade: six>=1.12.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (1.15.0)\n","Requirement already satisfied, skipping upgrade: tensorboard<2.3.0,>=2.2.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (2.2.2)\n","Requirement already satisfied, skipping upgrade: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (1.1.0)\n","Requirement already satisfied, skipping upgrade: opt-einsum>=2.3.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (3.3.0)\n","Requirement already satisfied, skipping upgrade: google-pasta>=0.1.8 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (0.2.0)\n","Requirement already satisfied, skipping upgrade: grpcio>=1.8.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (1.30.0)\n","Requirement already satisfied, skipping upgrade: scipy==1.4.1; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (1.4.1)\n","Requirement already satisfied, skipping upgrade: wheel>=0.26; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (0.34.2)\n","Requirement already satisfied, skipping upgrade: tensorflow-estimator<2.3.0,>=2.2.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (2.2.0)\n","Requirement already satisfied, skipping upgrade: gast==0.3.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (0.3.3)\n","Requirement already satisfied, skipping upgrade: protobuf>=3.8.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (3.12.2)\n","Requirement already satisfied, skipping upgrade: numpy<2.0,>=1.16.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (1.18.5)\n","Requirement already satisfied, skipping upgrade: h5py<2.11.0,>=2.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow_gpu==2.2.0) (2.10.0)\n","Requirement already satisfied, skipping upgrade: google-auth<2,>=1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (1.17.2)\n","Requirement already satisfied, skipping upgrade: setuptools>=41.0.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (49.1.0)\n","Requirement already satisfied, skipping upgrade: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (1.0.1)\n","Requirement already satisfied, skipping upgrade: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (0.4.1)\n","Requirement already satisfied, skipping upgrade: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (3.2.2)\n","Requirement already satisfied, skipping upgrade: requests<3,>=2.21.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (2.23.0)\n","Requirement already satisfied, skipping upgrade: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (1.7.0)\n","Requirement already satisfied, skipping upgrade: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (4.1.1)\n","Requirement already satisfied, skipping upgrade: rsa<5,>=3.1.4; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (4.6)\n","Requirement already satisfied, skipping upgrade: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.6/dist-packages (from google-auth<2,>=1.6.3->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (0.2.8)\n","Requirement already satisfied, skipping upgrade: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (1.3.0)\n","Requirement already satisfied, skipping upgrade: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from markdown>=2.6.8->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (1.7.0)\n","Requirement already satisfied, skipping upgrade: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (1.24.3)\n","Requirement already satisfied, skipping upgrade: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (3.0.4)\n","Requirement already satisfied, skipping upgrade: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (2.10)\n","Requirement already satisfied, skipping upgrade: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3,>=2.21.0->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (2020.6.20)\n","Requirement already satisfied, skipping upgrade: pyasn1>=0.1.3 in /usr/local/lib/python3.6/dist-packages (from rsa<5,>=3.1.4; python_version >= \"3\"->google-auth<2,>=1.6.3->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (0.4.8)\n","Requirement already satisfied, skipping upgrade: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (3.1.0)\n","Requirement already satisfied, skipping upgrade: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard<2.3.0,>=2.2.0->tensorflow_gpu==2.2.0) (3.1.0)\n","Installing collected packages: tensorflow-gpu\n","Successfully installed tensorflow-gpu-2.2.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ypWGYdPlLRUN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":144},"executionInfo":{"status":"ok","timestamp":1596085100733,"user_tz":240,"elapsed":170803,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"33d25481-064b-4a0e-da83-e4e4445ac277"},"source":["import os\n","import pathlib\n","\n","# Clone the tensorflow models repository if it doesn't already exist\n","if \"models\" in pathlib.Path.cwd().parts:\n","  while \"models\" in pathlib.Path.cwd().parts:\n","    os.chdir('..')\n","elif not pathlib.Path('models').exists():\n","  !git clone --depth 1 https://github.com/tensorflow/models"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Cloning into 'models'...\n","remote: Enumerating objects: 2800, done.\u001b[K\n","remote: Counting objects: 100% (2800/2800), done.\u001b[K\n","remote: Compressing objects: 100% (2435/2435), done.\u001b[K\n","remote: Total 2800 (delta 569), reused 1414 (delta 329), pack-reused 0\u001b[K\n","Receiving objects: 100% (2800/2800), 57.74 MiB | 32.74 MiB/s, done.\n","Resolving deltas: 100% (569/569), done.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"6QPmVBSlLTzM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1596085131985,"user_tz":240,"elapsed":202051,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"069c3c07-796e-4518-ea4f-972d5297d19c"},"source":["# Install the Object Detection API\n","%%bash\n","cd models/research/\n","protoc object_detection/protos/*.proto --python_out=.\n","cp object_detection/packages/tf2/setup.py .\n","python -m pip install ."],"execution_count":8,"outputs":[{"output_type":"stream","text":["Processing /content/models/research\n","Collecting avro-python3==1.8.1\n","  Downloading https://files.pythonhosted.org/packages/7d/7a/90ff9b8013e21942009380e7b86cf19d3dc83adb7042b735f016ca7e2b68/avro-python3-1.8.1.tar.gz\n","Collecting apache-beam\n","  Downloading https://files.pythonhosted.org/packages/56/f1/7fcfbff3d3eed7895f10b358844b6e8ed21b230666aabd09d842cd725363/apache_beam-2.23.0-cp36-cp36m-manylinux2010_x86_64.whl (8.3MB)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (7.0.0)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (4.2.6)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (3.2.2)\n","Requirement already satisfied: Cython in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (0.29.21)\n","Requirement already satisfied: contextlib2 in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (0.5.5)\n","Collecting tf-slim\n","  Downloading https://files.pythonhosted.org/packages/02/97/b0f4a64df018ca018cc035d44f2ef08f91e2e8aa67271f6f19633a015ff7/tf_slim-1.1.0-py2.py3-none-any.whl (352kB)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (1.15.0)\n","Requirement already satisfied: pycocotools in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (2.0.1)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (1.4.1)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (from object-detection==0.1) (1.0.5)\n","Collecting tf-models-official\n","  Downloading https://files.pythonhosted.org/packages/99/8e/6db83bab2f86475fa69289848379f642746314131527d8a4ced47a6396af/tf_models_official-2.2.2-py2.py3-none-any.whl (711kB)\n","Requirement already satisfied: grpcio<2,>=1.29.0 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (1.30.0)\n","Collecting hdfs<3.0.0,>=2.1.0\n","  Downloading https://files.pythonhosted.org/packages/82/39/2c0879b1bcfd1f6ad078eb210d09dbce21072386a3997074ee91e60ddc5a/hdfs-2.5.8.tar.gz (41kB)\n","Requirement already satisfied: numpy<2,>=1.14.3 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (1.18.5)\n","Collecting oauth2client<4,>=2.0.1\n","  Downloading https://files.pythonhosted.org/packages/c0/7b/bc893e35d6ca46a72faa4b9eaac25c687ce60e1fbe978993fe2de1b0ff0d/oauth2client-3.0.0.tar.gz (77kB)\n","Requirement already satisfied: protobuf<4,>=3.5.0.post1 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (3.12.2)\n","Requirement already satisfied: python-dateutil<3,>=2.8.0 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (2.8.1)\n","Requirement already satisfied: typing-extensions<3.8.0,>=3.7.0 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (3.7.4.2)\n","Collecting future<1.0.0,>=0.18.2\n","  Downloading https://files.pythonhosted.org/packages/45/0b/38b06fd9b92dc2b68d58b75f900e97884c45bedd2ff83203d933cf5851c9/future-0.18.2.tar.gz (829kB)\n","Collecting fastavro<0.24,>=0.21.4\n","  Downloading https://files.pythonhosted.org/packages/98/8e/1d62398df5569a805d956bd96df1b2c06f973e8d3f1f7489adf9c58b2824/fastavro-0.23.6-cp36-cp36m-manylinux2010_x86_64.whl (1.4MB)\n","Requirement already satisfied: pydot<2,>=1.2.0 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (1.3.0)\n","Collecting pyarrow<0.18.0,>=0.15.1; python_version >= \"3.0\" or platform_system != \"Windows\"\n","  Downloading https://files.pythonhosted.org/packages/ba/3f/6cac1714fff444664603f92cb9fbe91c7ae25375880158b9e9691c4584c8/pyarrow-0.17.1-cp36-cp36m-manylinux2014_x86_64.whl (63.8MB)\n","Requirement already satisfied: crcmod<2.0,>=1.7 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (1.7)\n","Requirement already satisfied: httplib2<0.18.0,>=0.8 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (0.17.4)\n","Collecting dill<0.3.2,>=0.3.1.1\n","  Downloading https://files.pythonhosted.org/packages/c7/11/345f3173809cea7f1a193bfbf02403fff250a3360e0e118a1630985e547d/dill-0.3.1.1.tar.gz (151kB)\n","Requirement already satisfied: pymongo<4.0.0,>=3.8.0 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (3.10.1)\n","Requirement already satisfied: pytz>=2018.3 in /usr/local/lib/python3.6/dist-packages (from apache-beam->object-detection==0.1) (2018.9)\n","Collecting mock<3.0.0,>=1.0.1\n","  Downloading https://files.pythonhosted.org/packages/e6/35/f187bdf23be87092bd0f1200d43d23076cee4d0dec109f195173fd3ebc79/mock-2.0.0-py2.py3-none-any.whl (56kB)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->object-detection==0.1) (2.4.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->object-detection==0.1) (1.2.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->object-detection==0.1) (0.10.0)\n","Requirement already satisfied: absl-py>=0.2.2 in /usr/local/lib/python3.6/dist-packages (from tf-slim->object-detection==0.1) (0.9.0)\n","Requirement already satisfied: setuptools>=18.0 in /usr/local/lib/python3.6/dist-packages (from pycocotools->object-detection==0.1) (49.1.0)\n","Requirement already satisfied: gin-config in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (0.3.0)\n","Collecting mlperf-compliance==0.0.10\n","  Downloading https://files.pythonhosted.org/packages/f4/08/f2febd8cbd5c9371f7dab311e90400d83238447ba7609b3bf0145b4cb2a2/mlperf_compliance-0.0.10-py3-none-any.whl\n","Requirement already satisfied: tensorflow-addons in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (0.8.3)\n","Collecting sentencepiece\n","  Downloading https://files.pythonhosted.org/packages/d4/a4/d0a884c4300004a78cca907a6ff9a5e9fe4f090f5d95ab341c53d28cbc58/sentencepiece-0.1.91-cp36-cp36m-manylinux1_x86_64.whl (1.1MB)\n","Requirement already satisfied: kaggle>=1.3.9 in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (1.5.6)\n","Collecting typing==3.7.4.1\n","  Downloading https://files.pythonhosted.org/packages/fe/2e/b480ee1b75e6d17d2993738670e75c1feeb9ff7f64452153cf018051cc92/typing-3.7.4.1-py3-none-any.whl\n","Collecting opencv-python-headless\n","  Downloading https://files.pythonhosted.org/packages/17/e4/a98a3c3098ea55b6ae193a1cd19a221dc3c1bde87a36db5550addc879d36/opencv_python_headless-4.3.0.36-cp36-cp36m-manylinux2014_x86_64.whl (36.4MB)\n","Requirement already satisfied: google-api-python-client>=1.6.7 in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (1.7.12)\n","Requirement already satisfied: tensorflow>=2.2.0 in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (2.2.0)\n","Requirement already satisfied: dataclasses in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (0.7)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (3.13)\n","Requirement already satisfied: psutil>=5.4.3 in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (5.4.8)\n","Requirement already satisfied: tensorflow-hub>=0.6.0 in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (0.8.0)\n","Collecting tensorflow-model-optimization>=0.2.1\n","  Downloading https://files.pythonhosted.org/packages/c8/4a/003e16e17c274dd09c81b224b226cdc9902309b905c62a50ebdd0cd12e6d/tensorflow_model_optimization-0.4.0-py2.py3-none-any.whl (169kB)\n","Collecting py-cpuinfo>=3.3.0\n","  Downloading https://files.pythonhosted.org/packages/f6/f5/8e6e85ce2e9f6e05040cf0d4e26f43a4718bcc4bce988b433276d4b1a5c1/py-cpuinfo-7.0.0.tar.gz (95kB)\n","Requirement already satisfied: google-cloud-bigquery>=0.31.0 in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (1.21.0)\n","Requirement already satisfied: tensorflow-datasets in /usr/local/lib/python3.6/dist-packages (from tf-models-official->object-detection==0.1) (2.1.0)\n","Requirement already satisfied: docopt in /usr/local/lib/python3.6/dist-packages (from hdfs<3.0.0,>=2.1.0->apache-beam->object-detection==0.1) (0.6.2)\n","Requirement already satisfied: requests>=2.7.0 in /usr/local/lib/python3.6/dist-packages (from hdfs<3.0.0,>=2.1.0->apache-beam->object-detection==0.1) (2.23.0)\n","Requirement already satisfied: pyasn1>=0.1.7 in /usr/local/lib/python3.6/dist-packages (from oauth2client<4,>=2.0.1->apache-beam->object-detection==0.1) (0.4.8)\n","Requirement already satisfied: pyasn1-modules>=0.0.5 in /usr/local/lib/python3.6/dist-packages (from oauth2client<4,>=2.0.1->apache-beam->object-detection==0.1) (0.2.8)\n","Requirement already satisfied: rsa>=3.1.4 in /usr/local/lib/python3.6/dist-packages (from oauth2client<4,>=2.0.1->apache-beam->object-detection==0.1) (4.6)\n","Collecting pbr>=0.11\n","  Downloading https://files.pythonhosted.org/packages/96/ba/aa953a11ec014b23df057ecdbc922fdb40ca8463466b1193f3367d2711a6/pbr-5.4.5-py2.py3-none-any.whl (110kB)\n","Requirement already satisfied: typeguard in /usr/local/lib/python3.6/dist-packages (from tensorflow-addons->tf-models-official->object-detection==0.1) (2.7.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.6/dist-packages (from kaggle>=1.3.9->tf-models-official->object-detection==0.1) (4.0.1)\n","Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from kaggle>=1.3.9->tf-models-official->object-detection==0.1) (1.24.3)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from kaggle>=1.3.9->tf-models-official->object-detection==0.1) (2020.6.20)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.6/dist-packages (from kaggle>=1.3.9->tf-models-official->object-detection==0.1) (4.41.1)\n","Requirement already satisfied: google-auth>=1.4.1 in /usr/local/lib/python3.6/dist-packages (from google-api-python-client>=1.6.7->tf-models-official->object-detection==0.1) (1.17.2)\n","Requirement already satisfied: uritemplate<4dev,>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from google-api-python-client>=1.6.7->tf-models-official->object-detection==0.1) (3.0.1)\n","Requirement already satisfied: google-auth-httplib2>=0.0.3 in /usr/local/lib/python3.6/dist-packages (from google-api-python-client>=1.6.7->tf-models-official->object-detection==0.1) (0.0.4)\n","Requirement already satisfied: google-pasta>=0.1.8 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (0.2.0)\n","Requirement already satisfied: tensorboard<2.3.0,>=2.2.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (2.2.2)\n","Requirement already satisfied: keras-preprocessing>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (1.1.2)\n","Requirement already satisfied: h5py<2.11.0,>=2.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (2.10.0)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (1.1.0)\n","Requirement already satisfied: wrapt>=1.11.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (1.12.1)\n","Requirement already satisfied: tensorflow-estimator<2.3.0,>=2.2.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (2.2.0)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (3.3.0)\n","Requirement already satisfied: wheel>=0.26; python_version >= \"3\" in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (0.34.2)\n","Requirement already satisfied: gast==0.3.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (0.3.3)\n","Requirement already satisfied: astunparse==1.6.3 in /usr/local/lib/python3.6/dist-packages (from tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (1.6.3)\n","Collecting dm-tree~=0.1.1\n","  Downloading https://files.pythonhosted.org/packages/16/48/10fb721334810081b7e6eebeba0d12e12126c76993e8c243062d2f56a89f/dm_tree-0.1.5-cp36-cp36m-manylinux1_x86_64.whl (294kB)\n","Requirement already satisfied: google-resumable-media!=0.4.0,<0.5.0dev,>=0.3.1 in /usr/local/lib/python3.6/dist-packages (from google-cloud-bigquery>=0.31.0->tf-models-official->object-detection==0.1) (0.4.1)\n","Requirement already satisfied: google-cloud-core<2.0dev,>=1.0.3 in /usr/local/lib/python3.6/dist-packages (from google-cloud-bigquery>=0.31.0->tf-models-official->object-detection==0.1) (1.0.3)\n","Requirement already satisfied: tensorflow-metadata in /usr/local/lib/python3.6/dist-packages (from tensorflow-datasets->tf-models-official->object-detection==0.1) (0.22.2)\n","Requirement already satisfied: attrs>=18.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-datasets->tf-models-official->object-detection==0.1) (19.3.0)\n","Requirement already satisfied: promise in /usr/local/lib/python3.6/dist-packages (from tensorflow-datasets->tf-models-official->object-detection==0.1) (2.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests>=2.7.0->hdfs<3.0.0,>=2.1.0->apache-beam->object-detection==0.1) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests>=2.7.0->hdfs<3.0.0,>=2.1.0->apache-beam->object-detection==0.1) (3.0.4)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.6/dist-packages (from python-slugify->kaggle>=1.3.9->tf-models-official->object-detection==0.1) (1.3)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from google-auth>=1.4.1->google-api-python-client>=1.6.7->tf-models-official->object-detection==0.1) (4.1.1)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (1.0.1)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (0.4.1)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (1.7.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<2.3.0,>=2.2.0->tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (3.2.2)\n","Requirement already satisfied: google-api-core<2.0.0dev,>=1.14.0 in /usr/local/lib/python3.6/dist-packages (from google-cloud-core<2.0dev,>=1.0.3->google-cloud-bigquery>=0.31.0->tf-models-official->object-detection==0.1) (1.16.0)\n","Requirement already satisfied: googleapis-common-protos in /usr/local/lib/python3.6/dist-packages (from tensorflow-metadata->tensorflow-datasets->tf-models-official->object-detection==0.1) (1.52.0)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.3.0,>=2.2.0->tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (1.3.0)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.6/dist-packages (from markdown>=2.6.8->tensorboard<2.3.0,>=2.2.0->tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (1.7.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.6/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.3.0,>=2.2.0->tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (3.1.0)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.6/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard<2.3.0,>=2.2.0->tensorflow>=2.2.0->tf-models-official->object-detection==0.1) (3.1.0)\n","Building wheels for collected packages: object-detection, avro-python3, hdfs, oauth2client, future, dill, py-cpuinfo\n","  Building wheel for object-detection (setup.py): started\n","  Building wheel for object-detection (setup.py): finished with status 'done'\n","  Created wheel for object-detection: filename=object_detection-0.1-cp36-none-any.whl size=1538595 sha256=48d030014aeaa804e8d4266e0f12ef472222f8c676fcfa8d3468188d1cdc64fa\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-f_tptz0r/wheels/94/49/4b/39b051683087a22ef7e80ec52152a27249d1a644ccf4e442ea\n","  Building wheel for avro-python3 (setup.py): started\n","  Building wheel for avro-python3 (setup.py): finished with status 'done'\n","  Created wheel for avro-python3: filename=avro_python3-1.8.1-cp36-none-any.whl size=43164 sha256=37559326d9e8f923b7d865c194c50ac400dc223c639d7d9880256111169333b4\n","  Stored in directory: /root/.cache/pip/wheels/5c/04/3c/ffe3561c960133e747de503dea3e3facef2dea533bc92cb21a\n","  Building wheel for hdfs (setup.py): started\n","  Building wheel for hdfs (setup.py): finished with status 'done'\n","  Created wheel for hdfs: filename=hdfs-2.5.8-cp36-none-any.whl size=33213 sha256=b8f7317d4dd82274a3a811b08aa5a5d670a87d4906c5ab2e49f6ac6bd730b295\n","  Stored in directory: /root/.cache/pip/wheels/fe/a7/05/23e3699975fc20f8a30e00ac1e515ab8c61168e982abe4ce70\n","  Building wheel for oauth2client (setup.py): started\n","  Building wheel for oauth2client (setup.py): finished with status 'done'\n","  Created wheel for oauth2client: filename=oauth2client-3.0.0-cp36-none-any.whl size=106382 sha256=b60dacf8a2d83012d514bce2117f621042f1d4672f6989e598104f2f6991d9ae\n","  Stored in directory: /root/.cache/pip/wheels/48/f7/87/b932f09c6335dbcf45d916937105a372ab14f353a9ca431d7d\n","  Building wheel for future (setup.py): started\n","  Building wheel for future (setup.py): finished with status 'done'\n","  Created wheel for future: filename=future-0.18.2-cp36-none-any.whl size=491057 sha256=b36d9daa3d20cea134b6b92bb426f8cba5efe67456f3bd50aff1319d6587a759\n","  Stored in directory: /root/.cache/pip/wheels/8b/99/a0/81daf51dcd359a9377b110a8a886b3895921802d2fc1b2397e\n","  Building wheel for dill (setup.py): started\n","  Building wheel for dill (setup.py): finished with status 'done'\n","  Created wheel for dill: filename=dill-0.3.1.1-cp36-none-any.whl size=78532 sha256=5207b50f8f867c08e0f46fc4084ddbdb2c0582c15e7d6f2f94cecd0a7c2e2a64\n","  Stored in directory: /root/.cache/pip/wheels/59/b1/91/f02e76c732915c4015ab4010f3015469866c1eb9b14058d8e7\n","  Building wheel for py-cpuinfo (setup.py): started\n","  Building wheel for py-cpuinfo (setup.py): finished with status 'done'\n","  Created wheel for py-cpuinfo: filename=py_cpuinfo-7.0.0-cp36-none-any.whl size=20069 sha256=87db77b7a9f75243a9dfdb96afa6dfd1f48d10b6c6af7a8de798116fcdc31e26\n","  Stored in directory: /root/.cache/pip/wheels/f1/93/7b/127daf0c3a5a49feb2fecd468d508067c733fba5192f726ad1\n","Successfully built object-detection avro-python3 hdfs oauth2client future dill py-cpuinfo\n","Installing collected packages: avro-python3, hdfs, oauth2client, future, fastavro, pyarrow, dill, pbr, mock, apache-beam, tf-slim, mlperf-compliance, sentencepiece, typing, opencv-python-headless, dm-tree, tensorflow-model-optimization, py-cpuinfo, tf-models-official, object-detection\n","  Found existing installation: oauth2client 4.1.3\n","    Uninstalling oauth2client-4.1.3:\n","      Successfully uninstalled oauth2client-4.1.3\n","  Found existing installation: future 0.16.0\n","    Uninstalling future-0.16.0:\n","      Successfully uninstalled future-0.16.0\n","  Found existing installation: pyarrow 0.14.1\n","    Uninstalling pyarrow-0.14.1:\n","      Successfully uninstalled pyarrow-0.14.1\n","  Found existing installation: dill 0.3.2\n","    Uninstalling dill-0.3.2:\n","      Successfully uninstalled dill-0.3.2\n","Successfully installed apache-beam-2.23.0 avro-python3-1.8.1 dill-0.3.1.1 dm-tree-0.1.5 fastavro-0.23.6 future-0.18.2 hdfs-2.5.8 mlperf-compliance-0.0.10 mock-2.0.0 oauth2client-3.0.0 object-detection-0.1 opencv-python-headless-4.3.0.36 pbr-5.4.5 py-cpuinfo-7.0.0 pyarrow-0.17.1 sentencepiece-0.1.91 tensorflow-model-optimization-0.4.0 tf-models-official-2.2.2 tf-slim-1.1.0 typing-3.7.4.1\n"],"name":"stdout"},{"output_type":"stream","text":["ERROR: pydrive 1.3.1 has requirement oauth2client>=4.0.0, but you'll have oauth2client 3.0.0 which is incompatible.\n","ERROR: multiprocess 0.70.10 has requirement dill>=0.3.2, but you'll have dill 0.3.1.1 which is incompatible.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"6HHXZrSopwri","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1596085133012,"user_tz":240,"elapsed":203070,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"3870c9b2-4b18-4894-c156-321d620ffeea"},"source":["#commence temporary keras fix for exporting efficientDet - this will inevitably be fixed and removed from the notebook in the coming days\n","%cat /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py"],"execution_count":9,"outputs":[{"output_type":"stream","text":["# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n","#\n","# Licensed under the Apache License, Version 2.0 (the \"License\");\n","# you may not use this file except in compliance with the License.\n","# You may obtain a copy of the License at\n","#\n","#     http://www.apache.org/licenses/LICENSE-2.0\n","#\n","# Unless required by applicable law or agreed to in writing, software\n","# distributed under the License is distributed on an \"AS IS\" BASIS,\n","# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","# See the License for the specific language governing permissions and\n","# limitations under the License.\n","# ==============================================================================\n","\"\"\"TensorFlow-related utilities.\"\"\"\n","from __future__ import absolute_import\n","from __future__ import division\n","from __future__ import print_function\n","\n","import copy\n","import numpy as np\n","import six\n","\n","from tensorflow.python.data.experimental.ops import cardinality\n","from tensorflow.python.eager import context\n","from tensorflow.python.framework import composite_tensor\n","from tensorflow.python.framework import ops\n","from tensorflow.python.framework import smart_cond as smart_module\n","from tensorflow.python.framework import tensor_shape\n","from tensorflow.python.framework import tensor_spec\n","from tensorflow.python.framework import tensor_util\n","from tensorflow.python.framework import type_spec\n","from tensorflow.python.keras import backend as K\n","from tensorflow.python.ops import control_flow_ops\n","from tensorflow.python.ops import math_ops\n","from tensorflow.python.ops import variables\n","from tensorflow.python.util import nest\n","from tensorflow.python.util import object_identity\n","from tensorflow.python.util import tf_contextlib\n","\n","\n","def smart_cond(pred, true_fn=None, false_fn=None, name=None):\n","  \"\"\"Return either `true_fn()` if predicate `pred` is true else `false_fn()`.\n","\n","  If `pred` is a bool or has a constant value, we return either `true_fn()`\n","  or `false_fn()`, otherwise we use `tf.cond` to dynamically route to both.\n","\n","  Arguments:\n","    pred: A scalar determining whether to return the result of `true_fn` or\n","      `false_fn`.\n","    true_fn: The callable to be performed if pred is true.\n","    false_fn: The callable to be performed if pred is false.\n","    name: Optional name prefix when using `tf.cond`.\n","\n","  Returns:\n","    Tensors returned by the call to either `true_fn` or `false_fn`.\n","\n","  Raises:\n","    TypeError: If `true_fn` or `false_fn` is not callable.\n","  \"\"\"\n","  if isinstance(pred, variables.Variable):\n","    return control_flow_ops.cond(\n","        pred, true_fn=true_fn, false_fn=false_fn, name=name)\n","  return smart_module.smart_cond(\n","      pred, true_fn=true_fn, false_fn=false_fn, name=name)\n","\n","\n","def constant_value(pred):\n","  \"\"\"Return the bool value for `pred`, or None if `pred` had a dynamic value.\n","\n","  Arguments:\n","    pred: A scalar, either a Python bool or a TensorFlow boolean variable\n","      or tensor, or the Python integer 1 or 0.\n","\n","  Returns:\n","    True or False if `pred` has a constant boolean value, None otherwise.\n","\n","  Raises:\n","    TypeError: If `pred` is not a Variable, Tensor or bool, or Python\n","      integer 1 or 0.\n","  \"\"\"\n","  # Allow integer booleans.\n","  if isinstance(pred, int):\n","    if pred == 1:\n","      pred = True\n","    elif pred == 0:\n","      pred = False\n","\n","  if isinstance(pred, variables.Variable):\n","    return None\n","  return smart_module.smart_constant_value(pred)\n","\n","\n","def is_tensor_or_tensor_list(v):\n","  v = nest.flatten(v)\n","  if v and isinstance(v[0], ops.Tensor):\n","    return True\n","  else:\n","    return False\n","\n","\n","def get_reachable_from_inputs(inputs, targets=None):\n","  \"\"\"Returns the set of tensors/ops reachable from `inputs`.\n","\n","  Stops if all targets have been found (target is optional).\n","\n","  Only valid in Symbolic mode, not Eager mode.\n","\n","  Args:\n","    inputs: List of tensors.\n","    targets: List of tensors.\n","\n","  Returns:\n","    A set of tensors reachable from the inputs (includes the inputs themselves).\n","  \"\"\"\n","  inputs = nest.flatten(inputs, expand_composites=True)\n","  reachable = object_identity.ObjectIdentitySet(inputs)\n","  if targets:\n","    remaining_targets = object_identity.ObjectIdentitySet(nest.flatten(targets))\n","  queue = inputs[:]\n","\n","  while queue:\n","    x = queue.pop()\n","    if isinstance(x, tuple(_user_convertible_tensor_types)):\n","      # Can't find consumers of user-specific types.\n","      continue\n","\n","    if isinstance(x, ops.Operation):\n","      outputs = x.outputs[:] or []\n","      outputs += x._control_outputs  # pylint: disable=protected-access\n","    elif isinstance(x, variables.Variable):\n","      try:\n","        outputs = [x.op]\n","      except AttributeError:\n","        # Variables can be created in an Eager context.\n","        outputs = []\n","    elif tensor_util.is_tensor(x):\n","      outputs = x.consumers()\n","    else:\n","      raise TypeError('Expected Operation, Variable, or Tensor, got ' + str(x))\n","\n","    for y in outputs:\n","      if y not in reachable:\n","        reachable.add(y)\n","        if targets:\n","          remaining_targets.discard(y)\n","        queue.insert(0, y)\n","\n","    if targets and not remaining_targets:\n","      return reachable\n","\n","  return reachable\n","\n","\n","# This function needs access to private functions of `nest`.\n","#  pylint: disable=protected-access\n","def map_structure_with_atomic(is_atomic_fn, map_fn, nested):\n","  \"\"\"Maps the atomic elements of a nested structure.\n","\n","  Arguments:\n","    is_atomic_fn: A function that determines if an element of `nested` is\n","      atomic.\n","    map_fn: The function to apply to atomic elements of `nested`.\n","    nested: A nested structure.\n","\n","  Returns:\n","    The nested structure, with atomic elements mapped according to `map_fn`.\n","\n","  Raises:\n","    ValueError: If an element that is neither atomic nor a sequence is\n","      encountered.\n","  \"\"\"\n","  if is_atomic_fn(nested):\n","    return map_fn(nested)\n","\n","  # Recursively convert.\n","  if not nest.is_sequence(nested):\n","    raise ValueError(\n","        'Received non-atomic and non-sequence element: {}'.format(nested))\n","  if nest._is_mapping(nested):\n","    values = [nested[k] for k in nest._sorted(nested)]\n","  else:\n","    values = nested\n","  mapped_values = [\n","      map_structure_with_atomic(is_atomic_fn, map_fn, ele) for ele in values\n","  ]\n","  return nest._sequence_like(nested, mapped_values)\n","\n","\n","#  pylint: enable=protected-access\n","\n","\n","def convert_shapes(input_shape, to_tuples=True):\n","  \"\"\"Converts nested shape representations to desired format.\n","\n","  Performs:\n","\n","  TensorShapes -> tuples if `to_tuples=True`.\n","  tuples of int or None -> TensorShapes if `to_tuples=False`.\n","\n","  Valid objects to be converted are:\n","  - TensorShapes\n","  - tuples with elements of type int or None.\n","  - ints\n","  - None\n","\n","  Arguments:\n","    input_shape: A nested structure of objects to be converted to TensorShapes.\n","    to_tuples: If `True`, converts all TensorShape to tuples. Otherwise converts\n","      all tuples representing shapes to TensorShapes.\n","\n","  Returns:\n","    Nested structure of shapes in desired format.\n","\n","  Raises:\n","    ValueError: when the input tensor shape can't be converted to tuples, eg\n","      unknown tensor shape.\n","  \"\"\"\n","\n","  def _is_shape_component(value):\n","    return value is None or isinstance(value, (int, tensor_shape.Dimension))\n","\n","  def _is_atomic_shape(input_shape):\n","    # Ex: TensorShape or (None, 10, 32) or 5 or `None`\n","    if _is_shape_component(input_shape):\n","      return True\n","    if isinstance(input_shape, tensor_shape.TensorShape):\n","      return True\n","    if (isinstance(input_shape, (tuple, list)) and\n","        all(_is_shape_component(ele) for ele in input_shape)):\n","      return True\n","    return False\n","\n","  def _convert_shape(input_shape):\n","    input_shape = tensor_shape.TensorShape(input_shape)\n","    if to_tuples:\n","      input_shape = tuple(input_shape.as_list())\n","    return input_shape\n","\n","  return map_structure_with_atomic(_is_atomic_shape, _convert_shape,\n","                                   input_shape)\n","\n","\n","class ListWrapper(object):\n","  \"\"\"A wrapper for lists to be treated as elements for `nest`.\"\"\"\n","\n","  def __init__(self, list_to_wrap):\n","    self._list = list_to_wrap\n","\n","  def as_list(self):\n","    return self._list\n","\n","\n","def convert_inner_node_data(nested, wrap=False):\n","  \"\"\"Either wraps or unwraps innermost node data lists in `ListWrapper` objects.\n","\n","  Arguments:\n","    nested: A nested data structure.\n","    wrap: If `True`, wrap innermost lists in `ListWrapper` objects. If `False`,\n","      unwraps `ListWrapper` objects into lists.\n","\n","  Returns:\n","    Structure of same type as nested, with lists wrapped/unwrapped.\n","  \"\"\"\n","\n","  def _is_serialized_node_data(nested):\n","    # Node data can be of form `[layer_name, node_id, tensor_id]` or\n","    # `[layer_name, node_id, tensor_id, kwargs]`.\n","    if (isinstance(nested, list) and (len(nested) in [3, 4]) and\n","        isinstance(nested[0], six.string_types)):\n","      return True\n","    return False\n","\n","  def _is_atomic_nested(nested):\n","    \"\"\"Returns `True` if `nested` is a list representing node data.\"\"\"\n","    if isinstance(nested, ListWrapper):\n","      return True\n","    if _is_serialized_node_data(nested):\n","      return True\n","    return not nest.is_sequence(nested)\n","\n","  def _convert_object_or_list(nested):\n","    \"\"\"Convert b/t `ListWrapper` object and list representations.\"\"\"\n","    if wrap:\n","      if isinstance(nested, ListWrapper):\n","        return nested\n","      if _is_serialized_node_data(nested):\n","        return ListWrapper(nested)\n","      return nested\n","    else:\n","      if isinstance(nested, ListWrapper):\n","        return nested.as_list()\n","      return nested\n","\n","  return map_structure_with_atomic(_is_atomic_nested, _convert_object_or_list,\n","                                   nested)\n","\n","\n","def shape_type_conversion(fn):\n","  \"\"\"Decorator that handles tuple/TensorShape conversion.\n","\n","  Used in `compute_output_shape` and `build`.\n","\n","  Arguments:\n","    fn: function to wrap.\n","\n","  Returns:\n","    Wrapped function.\n","  \"\"\"\n","\n","  def wrapper(instance, input_shape):\n","    # Pass shapes as tuples to `fn`\n","    # This preserves compatibility with external Keras.\n","    if input_shape is not None:\n","      input_shape = convert_shapes(input_shape, to_tuples=True)\n","    output_shape = fn(instance, input_shape)\n","    # Return shapes from `fn` as TensorShapes.\n","    if output_shape is not None:\n","      output_shape = convert_shapes(output_shape, to_tuples=False)\n","    return output_shape\n","\n","  return wrapper\n","\n","\n","def are_all_symbolic_tensors(tensors):\n","  return all(is_symbolic_tensor(tensor) for tensor in tensors)\n","\n","\n","_user_convertible_tensor_types = set()\n","\n","\n","def is_symbolic_tensor(tensor):\n","  \"\"\"Returns whether a tensor is symbolic (from a TF graph) or an eager tensor.\n","\n","  A Variable can be seen as either: it is considered symbolic\n","  when we are in a graph scope, and eager when we are in an eager scope.\n","\n","  Arguments:\n","    tensor: A tensor instance to test.\n","\n","  Returns:\n","    True for symbolic tensors, False for eager tensors.\n","  \"\"\"\n","  if isinstance(tensor, tuple(_user_convertible_tensor_types)):\n","    tensor = ops.convert_to_tensor_or_composite(tensor)\n","  if isinstance(tensor, variables.Variable):\n","    # Variables that are output of a Keras Layer in Functional API mode\n","    # should be considered symbolic.\n","    # TODO(omalleyt): We need a better way to check this in order to\n","    # enable `run_eagerly=True` for Models containing Layers that\n","    # return Variables as outputs.\n","    return (getattr(tensor, '_keras_history', False) or\n","            not context.executing_eagerly())\n","  if isinstance(tensor, composite_tensor.CompositeTensor):\n","    component_tensors = nest.flatten(tensor, expand_composites=True)\n","    return any(hasattr(t, 'graph') for t in component_tensors)\n","  if isinstance(tensor, ops.Tensor):\n","    return hasattr(tensor, 'graph')\n","  return False\n","\n","\n","def register_symbolic_tensor_type(cls):\n","  \"\"\"Allows users to specify types regarded as symbolic `Tensor`s.\n","\n","  Used in conjunction with `tf.register_tensor_conversion_function`, calling\n","  `tf.keras.utils.register_symbolic_tensor_type(cls)` allows non-`Tensor`\n","  objects to be plumbed through Keras layers.\n","\n","  Example:\n","\n","  ```python\n","  # One-time setup.\n","  class Foo(object):\n","    def __init__(self, input_):\n","      self._input = input_\n","    def value(self):\n","      return tf.constant(42.)\n","\n","  tf.register_tensor_conversion_function(\n","      Foo, lambda x, *args, **kwargs: x.value())\n","\n","  tf.keras.utils.register_symbolic_tensor_type(Foo)\n","\n","  # User-land.\n","  layer = tf.keras.layers.Lambda(lambda input_: Foo(input_))\n","  ```\n","\n","  Arguments:\n","    cls: A `class` type which shall be regarded as a symbolic `Tensor`.\n","  \"\"\"\n","  global _user_convertible_tensor_types\n","  _user_convertible_tensor_types.add(cls)\n","\n","\n","def type_spec_from_value(value):\n","  \"\"\"Grab type_spec without converting array-likes to tensors.\"\"\"\n","  if isinstance(value, composite_tensor.CompositeTensor):\n","    return value._type_spec  # pylint: disable=protected-access\n","  # Get a TensorSpec for array-like data without\n","  # converting the data to a Tensor\n","  if hasattr(value, 'shape') and hasattr(value, 'dtype'):\n","    return tensor_spec.TensorSpec(value.shape, value.dtype)\n","  else:\n","    return type_spec.type_spec_from_value(value)\n","\n","\n","def is_tensor_or_variable(x):\n","  return tensor_util.is_tensor(x) or isinstance(x, variables.Variable)\n","\n","\n","def assert_no_legacy_layers(layers):\n","  \"\"\"Prevent tf.layers.Layers from being used with Keras.\n","\n","  Certain legacy layers inherit from their keras analogs; however they are\n","  not supported with keras and can lead to subtle and hard to diagnose bugs.\n","\n","  Args:\n","    layers: A list of layers to check\n","\n","  Raises:\n","    TypeError: If any elements of layers are tf.layers.Layers\n","  \"\"\"\n","\n","  # isinstance check for tf.layers.Layer introduces a circular dependency.\n","  legacy_layers = [l for l in layers if getattr(l, '_is_legacy_layer', None)]\n","  if legacy_layers:\n","    layer_str = '\\n'.join('  ' + str(l) for l in legacy_layers)\n","    raise TypeError(\n","        'The following are legacy tf.layers.Layers:\\n{}\\nTo use keras as a '\n","        'framework (for instance using the Network, Model, or Sequential '\n","        'classes), please use the tf.keras.layers implementation instead. '\n","        '(Or, if writing custom layers, subclass from tf.keras.layers rather '\n","        'than tf.layers)'.format(layer_str))\n","\n","\n","@tf_contextlib.contextmanager\n","def maybe_init_scope(layer):\n","  \"\"\"Open an `init_scope` if in V2 mode and using the keras graph.\n","\n","  Arguments:\n","    layer: The Layer/Model that is currently active.\n","\n","  Yields:\n","    None\n","  \"\"\"\n","  # Don't open an init_scope in V1 mode or when using legacy tf.layers.\n","  if (ops.executing_eagerly_outside_functions() and\n","      getattr(layer, '_keras_style', True)):\n","    with ops.init_scope():\n","      yield\n","  else:\n","    yield\n","\n","\n","@tf_contextlib.contextmanager\n","def graph_context_for_symbolic_tensors(*args, **kwargs):\n","  \"\"\"Returns graph context manager if any of the inputs is a symbolic tensor.\"\"\"\n","  if any(is_symbolic_tensor(v) for v in list(args) + list(kwargs.values())):\n","    with K.get_graph().as_default():\n","      yield\n","  else:\n","    yield\n","\n","\n","def dataset_is_infinite(dataset):\n","  \"\"\"True if the passed dataset is infinite.\"\"\"\n","  if ops.executing_eagerly_outside_functions():\n","    return math_ops.equal(\n","        cardinality.cardinality(dataset), cardinality.INFINITE)\n","  else:\n","    dataset_size = K.get_session().run(cardinality.cardinality(dataset))\n","    return dataset_size == cardinality.INFINITE\n","\n","\n","def get_tensor_spec(t, dynamic_batch=False, name=None):\n","  \"\"\"Returns a `TensorSpec` given a single `Tensor` or `TensorSpec`.\"\"\"\n","  if isinstance(t, type_spec.TypeSpec):\n","    spec = t\n","  elif isinstance(t, composite_tensor.CompositeTensor):\n","    # TODO(b/148821952): Should these specs have a name attr?\n","    spec = t._type_spec  # pylint: disable=protected-access\n","  elif hasattr(t, 'shape') and hasattr(t, 'dtype'):\n","    spec = tensor_spec.TensorSpec(shape=t.shape, dtype=t.dtype, name=name)\n","  else:\n","    return None  # Allow non-Tensors to pass through.\n","\n","  if not dynamic_batch:\n","    return spec\n","\n","  dynamic_batch_spec = copy.deepcopy(spec)\n","  # RaggedTensorSpec only has a private _shape.\n","  shape = dynamic_batch_spec._shape.as_list()  # pylint: disable=protected-access\n","  if shape:\n","    shape[0] = None\n","    dynamic_batch_spec._shape = tensor_shape.TensorShape(shape)  # pylint: disable=protected-access\n","  return dynamic_batch_spec\n","\n","\n","def to_numpy_or_python_type(tensors):\n","  \"\"\"Converts a structure of `Tensor`s to `NumPy` arrays or Python scalar types.\n","\n","  For each tensor, it calls `tensor.numpy()`. If the result is a scalar value,\n","  it converts it to a Python type, such as a float or int, by calling\n","  `result.item()`.\n","\n","  Numpy scalars are converted, as Python types are often more convenient to deal\n","  with. This is especially useful for bfloat16 Numpy scalars, which don't\n","  support as many operations as other Numpy values.\n","\n","  Args:\n","    tensors: A structure of tensors.\n","\n","  Returns:\n","    `tensors`, but scalar tensors are converted to Python types and non-scalar\n","    tensors are converted to Numpy arrays.\n","  \"\"\"\n","  def _to_single_numpy_or_python_type(t):\n","    if isinstance(t, ops.Tensor):\n","      x = t.numpy()\n","      return x.item() if np.ndim(x) == 0 else x\n","    return t  # Don't turn ragged or sparse tensors to NumPy.\n","\n","  return nest.map_structure(_to_single_numpy_or_python_type, tensors)\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OGE37OTsqFdr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596085133018,"user_tz":240,"elapsed":203069,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"25bd3af9-6318-4a34-f4e2-2caad670bba3"},"source":["\n","%%writefile /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py\n","\n","\n","#Roboflow: we are making a tiny change to the keras utils so we can export weights!\n","\n","# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n","#\n","# Licensed under the Apache License, Version 2.0 (the \"License\");\n","# you may not use this file except in compliance with the License.\n","# You may obtain a copy of the License at\n","#\n","#     http://www.apache.org/licenses/LICENSE-2.0\n","#\n","# Unless required by applicable law or agreed to in writing, software\n","# distributed under the License is distributed on an \"AS IS\" BASIS,\n","# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","# See the License for the specific language governing permissions and\n","# limitations under the License.\n","# ==============================================================================\n","\"\"\"TensorFlow-related utilities.\"\"\"\n","from __future__ import absolute_import\n","from __future__ import division\n","from __future__ import print_function\n","\n","import copy\n","import numpy as np\n","import six\n","\n","from tensorflow.python.data.experimental.ops import cardinality\n","from tensorflow.python.eager import context\n","from tensorflow.python.framework import composite_tensor\n","from tensorflow.python.framework import ops\n","from tensorflow.python.framework import smart_cond as smart_module\n","from tensorflow.python.framework import tensor_shape\n","from tensorflow.python.framework import tensor_spec\n","from tensorflow.python.framework import tensor_util\n","from tensorflow.python.framework import type_spec\n","from tensorflow.python.keras import backend as K\n","from tensorflow.python.ops import control_flow_ops\n","from tensorflow.python.ops import math_ops\n","from tensorflow.python.ops import variables\n","from tensorflow.python.util import nest\n","from tensorflow.python.util import object_identity\n","from tensorflow.python.util import tf_contextlib\n","\n","\n","def smart_cond(pred, true_fn=None, false_fn=None, name=None):\n","  \"\"\"Return either `true_fn()` if predicate `pred` is true else `false_fn()`.\n","\n","  If `pred` is a bool or has a constant value, we return either `true_fn()`\n","  or `false_fn()`, otherwise we use `tf.cond` to dynamically route to both.\n","\n","  Arguments:\n","    pred: A scalar determining whether to return the result of `true_fn` or\n","      `false_fn`.\n","    true_fn: The callable to be performed if pred is true.\n","    false_fn: The callable to be performed if pred is false.\n","    name: Optional name prefix when using `tf.cond`.\n","\n","  Returns:\n","    Tensors returned by the call to either `true_fn` or `false_fn`.\n","\n","  Raises:\n","    TypeError: If `true_fn` or `false_fn` is not callable.\n","  \"\"\"\n","  if isinstance(pred, variables.Variable):\n","    return control_flow_ops.cond(\n","        pred, true_fn=true_fn, false_fn=false_fn, name=name)\n","  return smart_module.smart_cond(\n","      pred, true_fn=true_fn, false_fn=false_fn, name=name)\n","\n","\n","def constant_value(pred):\n","  \"\"\"Return the bool value for `pred`, or None if `pred` had a dynamic value.\n","\n","  Arguments:\n","    pred: A scalar, either a Python bool or a TensorFlow boolean variable\n","      or tensor, or the Python integer 1 or 0.\n","\n","  Returns:\n","    True or False if `pred` has a constant boolean value, None otherwise.\n","\n","  Raises:\n","    TypeError: If `pred` is not a Variable, Tensor or bool, or Python\n","      integer 1 or 0.\n","  \"\"\"\n","  # Allow integer booleans.\n","  if isinstance(pred, int):\n","    if pred == 1:\n","      pred = True\n","    elif pred == 0:\n","      pred = False\n","\n","  if isinstance(pred, variables.Variable):\n","    return None\n","  return smart_module.smart_constant_value(pred)\n","\n","\n","def is_tensor_or_tensor_list(v):\n","  v = nest.flatten(v)\n","  if v and isinstance(v[0], ops.Tensor):\n","    return True\n","  else:\n","    return False\n","\n","\n","def get_reachable_from_inputs(inputs, targets=None):\n","  \"\"\"Returns the set of tensors/ops reachable from `inputs`.\n","\n","  Stops if all targets have been found (target is optional).\n","\n","  Only valid in Symbolic mode, not Eager mode.\n","\n","  Args:\n","    inputs: List of tensors.\n","    targets: List of tensors.\n","\n","  Returns:\n","    A set of tensors reachable from the inputs (includes the inputs themselves).\n","  \"\"\"\n","  inputs = nest.flatten(inputs, expand_composites=True)\n","  reachable = object_identity.ObjectIdentitySet(inputs)\n","  if targets:\n","    remaining_targets = object_identity.ObjectIdentitySet(nest.flatten(targets))\n","  queue = inputs[:]\n","\n","  while queue:\n","    x = queue.pop()\n","    if isinstance(x, tuple(_user_convertible_tensor_types)):\n","      # Can't find consumers of user-specific types.\n","      continue\n","\n","    if isinstance(x, ops.Operation):\n","      outputs = x.outputs[:] or []\n","      outputs += x._control_outputs  # pylint: disable=protected-access\n","    elif isinstance(x, variables.Variable):\n","      try:\n","        outputs = [x.op]\n","      except AttributeError:\n","        # Variables can be created in an Eager context.\n","        outputs = []\n","    elif tensor_util.is_tensor(x):\n","      outputs = x.consumers()\n","    else:\n","      if not isinstance(x, str):\n","        raise TypeError('Expected Operation, Variable, or Tensor, got ' + str(x))\n","\n","    for y in outputs:\n","      if y not in reachable:\n","        reachable.add(y)\n","        if targets:\n","          remaining_targets.discard(y)\n","        queue.insert(0, y)\n","\n","    if targets and not remaining_targets:\n","      return reachable\n","\n","  return reachable\n","\n","\n","# This function needs access to private functions of `nest`.\n","#  pylint: disable=protected-access\n","def map_structure_with_atomic(is_atomic_fn, map_fn, nested):\n","  \"\"\"Maps the atomic elements of a nested structure.\n","\n","  Arguments:\n","    is_atomic_fn: A function that determines if an element of `nested` is\n","      atomic.\n","    map_fn: The function to apply to atomic elements of `nested`.\n","    nested: A nested structure.\n","\n","  Returns:\n","    The nested structure, with atomic elements mapped according to `map_fn`.\n","\n","  Raises:\n","    ValueError: If an element that is neither atomic nor a sequence is\n","      encountered.\n","  \"\"\"\n","  if is_atomic_fn(nested):\n","    return map_fn(nested)\n","\n","  # Recursively convert.\n","  if not nest.is_sequence(nested):\n","    raise ValueError(\n","        'Received non-atomic and non-sequence element: {}'.format(nested))\n","  if nest._is_mapping(nested):\n","    values = [nested[k] for k in nest._sorted(nested)]\n","  else:\n","    values = nested\n","  mapped_values = [\n","      map_structure_with_atomic(is_atomic_fn, map_fn, ele) for ele in values\n","  ]\n","  return nest._sequence_like(nested, mapped_values)\n","\n","\n","#  pylint: enable=protected-access\n","\n","\n","def convert_shapes(input_shape, to_tuples=True):\n","  \"\"\"Converts nested shape representations to desired format.\n","\n","  Performs:\n","\n","  TensorShapes -> tuples if `to_tuples=True`.\n","  tuples of int or None -> TensorShapes if `to_tuples=False`.\n","\n","  Valid objects to be converted are:\n","  - TensorShapes\n","  - tuples with elements of type int or None.\n","  - ints\n","  - None\n","\n","  Arguments:\n","    input_shape: A nested structure of objects to be converted to TensorShapes.\n","    to_tuples: If `True`, converts all TensorShape to tuples. Otherwise converts\n","      all tuples representing shapes to TensorShapes.\n","\n","  Returns:\n","    Nested structure of shapes in desired format.\n","\n","  Raises:\n","    ValueError: when the input tensor shape can't be converted to tuples, eg\n","      unknown tensor shape.\n","  \"\"\"\n","\n","  def _is_shape_component(value):\n","    return value is None or isinstance(value, (int, tensor_shape.Dimension))\n","\n","  def _is_atomic_shape(input_shape):\n","    # Ex: TensorShape or (None, 10, 32) or 5 or `None`\n","    if _is_shape_component(input_shape):\n","      return True\n","    if isinstance(input_shape, tensor_shape.TensorShape):\n","      return True\n","    if (isinstance(input_shape, (tuple, list)) and\n","        all(_is_shape_component(ele) for ele in input_shape)):\n","      return True\n","    return False\n","\n","  def _convert_shape(input_shape):\n","    input_shape = tensor_shape.TensorShape(input_shape)\n","    if to_tuples:\n","      input_shape = tuple(input_shape.as_list())\n","    return input_shape\n","\n","  return map_structure_with_atomic(_is_atomic_shape, _convert_shape,\n","                                   input_shape)\n","\n","\n","class ListWrapper(object):\n","  \"\"\"A wrapper for lists to be treated as elements for `nest`.\"\"\"\n","\n","  def __init__(self, list_to_wrap):\n","    self._list = list_to_wrap\n","\n","  def as_list(self):\n","    return self._list\n","\n","\n","def convert_inner_node_data(nested, wrap=False):\n","  \"\"\"Either wraps or unwraps innermost node data lists in `ListWrapper` objects.\n","\n","  Arguments:\n","    nested: A nested data structure.\n","    wrap: If `True`, wrap innermost lists in `ListWrapper` objects. If `False`,\n","      unwraps `ListWrapper` objects into lists.\n","\n","  Returns:\n","    Structure of same type as nested, with lists wrapped/unwrapped.\n","  \"\"\"\n","\n","  def _is_serialized_node_data(nested):\n","    # Node data can be of form `[layer_name, node_id, tensor_id]` or\n","    # `[layer_name, node_id, tensor_id, kwargs]`.\n","    if (isinstance(nested, list) and (len(nested) in [3, 4]) and\n","        isinstance(nested[0], six.string_types)):\n","      return True\n","    return False\n","\n","  def _is_atomic_nested(nested):\n","    \"\"\"Returns `True` if `nested` is a list representing node data.\"\"\"\n","    if isinstance(nested, ListWrapper):\n","      return True\n","    if _is_serialized_node_data(nested):\n","      return True\n","    return not nest.is_sequence(nested)\n","\n","  def _convert_object_or_list(nested):\n","    \"\"\"Convert b/t `ListWrapper` object and list representations.\"\"\"\n","    if wrap:\n","      if isinstance(nested, ListWrapper):\n","        return nested\n","      if _is_serialized_node_data(nested):\n","        return ListWrapper(nested)\n","      return nested\n","    else:\n","      if isinstance(nested, ListWrapper):\n","        return nested.as_list()\n","      return nested\n","\n","  return map_structure_with_atomic(_is_atomic_nested, _convert_object_or_list,\n","                                   nested)\n","\n","\n","def shape_type_conversion(fn):\n","  \"\"\"Decorator that handles tuple/TensorShape conversion.\n","\n","  Used in `compute_output_shape` and `build`.\n","\n","  Arguments:\n","    fn: function to wrap.\n","\n","  Returns:\n","    Wrapped function.\n","  \"\"\"\n","\n","  def wrapper(instance, input_shape):\n","    # Pass shapes as tuples to `fn`\n","    # This preserves compatibility with external Keras.\n","    if input_shape is not None:\n","      input_shape = convert_shapes(input_shape, to_tuples=True)\n","    output_shape = fn(instance, input_shape)\n","    # Return shapes from `fn` as TensorShapes.\n","    if output_shape is not None:\n","      output_shape = convert_shapes(output_shape, to_tuples=False)\n","    return output_shape\n","\n","  return wrapper\n","\n","\n","def are_all_symbolic_tensors(tensors):\n","  return all(is_symbolic_tensor(tensor) for tensor in tensors)\n","\n","\n","_user_convertible_tensor_types = set()\n","\n","\n","def is_symbolic_tensor(tensor):\n","  \"\"\"Returns whether a tensor is symbolic (from a TF graph) or an eager tensor.\n","\n","  A Variable can be seen as either: it is considered symbolic\n","  when we are in a graph scope, and eager when we are in an eager scope.\n","\n","  Arguments:\n","    tensor: A tensor instance to test.\n","\n","  Returns:\n","    True for symbolic tensors, False for eager tensors.\n","  \"\"\"\n","  if isinstance(tensor, tuple(_user_convertible_tensor_types)):\n","    tensor = ops.convert_to_tensor_or_composite(tensor)\n","  if isinstance(tensor, variables.Variable):\n","    # Variables that are output of a Keras Layer in Functional API mode\n","    # should be considered symbolic.\n","    # TODO(omalleyt): We need a better way to check this in order to\n","    # enable `run_eagerly=True` for Models containing Layers that\n","    # return Variables as outputs.\n","    return (getattr(tensor, '_keras_history', False) or\n","            not context.executing_eagerly())\n","  if isinstance(tensor, composite_tensor.CompositeTensor):\n","    component_tensors = nest.flatten(tensor, expand_composites=True)\n","    return any(hasattr(t, 'graph') for t in component_tensors)\n","  if isinstance(tensor, ops.Tensor):\n","    return hasattr(tensor, 'graph')\n","  return False\n","\n","\n","def register_symbolic_tensor_type(cls):\n","  \"\"\"Allows users to specify types regarded as symbolic `Tensor`s.\n","\n","  Used in conjunction with `tf.register_tensor_conversion_function`, calling\n","  `tf.keras.utils.register_symbolic_tensor_type(cls)` allows non-`Tensor`\n","  objects to be plumbed through Keras layers.\n","\n","  Example:\n","\n","  ```python\n","  # One-time setup.\n","  class Foo(object):\n","    def __init__(self, input_):\n","      self._input = input_\n","    def value(self):\n","      return tf.constant(42.)\n","\n","  tf.register_tensor_conversion_function(\n","      Foo, lambda x, *args, **kwargs: x.value())\n","\n","  tf.keras.utils.register_symbolic_tensor_type(Foo)\n","\n","  # User-land.\n","  layer = tf.keras.layers.Lambda(lambda input_: Foo(input_))\n","  ```\n","\n","  Arguments:\n","    cls: A `class` type which shall be regarded as a symbolic `Tensor`.\n","  \"\"\"\n","  global _user_convertible_tensor_types\n","  _user_convertible_tensor_types.add(cls)\n","\n","\n","def type_spec_from_value(value):\n","  \"\"\"Grab type_spec without converting array-likes to tensors.\"\"\"\n","  if isinstance(value, composite_tensor.CompositeTensor):\n","    return value._type_spec  # pylint: disable=protected-access\n","  # Get a TensorSpec for array-like data without\n","  # converting the data to a Tensor\n","  if hasattr(value, 'shape') and hasattr(value, 'dtype'):\n","    return tensor_spec.TensorSpec(value.shape, value.dtype)\n","  else:\n","    return type_spec.type_spec_from_value(value)\n","\n","\n","def is_tensor_or_variable(x):\n","  return tensor_util.is_tensor(x) or isinstance(x, variables.Variable)\n","\n","\n","def assert_no_legacy_layers(layers):\n","  \"\"\"Prevent tf.layers.Layers from being used with Keras.\n","\n","  Certain legacy layers inherit from their keras analogs; however they are\n","  not supported with keras and can lead to subtle and hard to diagnose bugs.\n","\n","  Args:\n","    layers: A list of layers to check\n","\n","  Raises:\n","    TypeError: If any elements of layers are tf.layers.Layers\n","  \"\"\"\n","\n","  # isinstance check for tf.layers.Layer introduces a circular dependency.\n","  legacy_layers = [l for l in layers if getattr(l, '_is_legacy_layer', None)]\n","  if legacy_layers:\n","    layer_str = '\\n'.join('  ' + str(l) for l in legacy_layers)\n","    raise TypeError(\n","        'The following are legacy tf.layers.Layers:\\n{}\\nTo use keras as a '\n","        'framework (for instance using the Network, Model, or Sequential '\n","        'classes), please use the tf.keras.layers implementation instead. '\n","        '(Or, if writing custom layers, subclass from tf.keras.layers rather '\n","        'than tf.layers)'.format(layer_str))\n","\n","\n","@tf_contextlib.contextmanager\n","def maybe_init_scope(layer):\n","  \"\"\"Open an `init_scope` if in V2 mode and using the keras graph.\n","\n","  Arguments:\n","    layer: The Layer/Model that is currently active.\n","\n","  Yields:\n","    None\n","  \"\"\"\n","  # Don't open an init_scope in V1 mode or when using legacy tf.layers.\n","  if (ops.executing_eagerly_outside_functions() and\n","      getattr(layer, '_keras_style', True)):\n","    with ops.init_scope():\n","      yield\n","  else:\n","    yield\n","\n","\n","@tf_contextlib.contextmanager\n","def graph_context_for_symbolic_tensors(*args, **kwargs):\n","  \"\"\"Returns graph context manager if any of the inputs is a symbolic tensor.\"\"\"\n","  if any(is_symbolic_tensor(v) for v in list(args) + list(kwargs.values())):\n","    with K.get_graph().as_default():\n","      yield\n","  else:\n","    yield\n","\n","\n","def dataset_is_infinite(dataset):\n","  \"\"\"True if the passed dataset is infinite.\"\"\"\n","  if ops.executing_eagerly_outside_functions():\n","    return math_ops.equal(\n","        cardinality.cardinality(dataset), cardinality.INFINITE)\n","  else:\n","    dataset_size = K.get_session().run(cardinality.cardinality(dataset))\n","    return dataset_size == cardinality.INFINITE\n","\n","\n","def get_tensor_spec(t, dynamic_batch=False, name=None):\n","  \"\"\"Returns a `TensorSpec` given a single `Tensor` or `TensorSpec`.\"\"\"\n","  if isinstance(t, type_spec.TypeSpec):\n","    spec = t\n","  elif isinstance(t, composite_tensor.CompositeTensor):\n","    # TODO(b/148821952): Should these specs have a name attr?\n","    spec = t._type_spec  # pylint: disable=protected-access\n","  elif hasattr(t, 'shape') and hasattr(t, 'dtype'):\n","    spec = tensor_spec.TensorSpec(shape=t.shape, dtype=t.dtype, name=name)\n","  else:\n","    return None  # Allow non-Tensors to pass through.\n","\n","  if not dynamic_batch:\n","    return spec\n","\n","  dynamic_batch_spec = copy.deepcopy(spec)\n","  # RaggedTensorSpec only has a private _shape.\n","  shape = dynamic_batch_spec._shape.as_list()  # pylint: disable=protected-access\n","  if shape:\n","    shape[0] = None\n","    dynamic_batch_spec._shape = tensor_shape.TensorShape(shape)  # pylint: disable=protected-access\n","  return dynamic_batch_spec\n","\n","\n","def to_numpy_or_python_type(tensors):\n","  \"\"\"Converts a structure of `Tensor`s to `NumPy` arrays or Python scalar types.\n","\n","  For each tensor, it calls `tensor.numpy()`. If the result is a scalar value,\n","  it converts it to a Python type, such as a float or int, by calling\n","  `result.item()`.\n","\n","  Numpy scalars are converted, as Python types are often more convenient to deal\n","  with. This is especially useful for bfloat16 Numpy scalars, which don't\n","  support as many operations as other Numpy values.\n","\n","  Args:\n","    tensors: A structure of tensors.\n","\n","  Returns:\n","    `tensors`, but scalar tensors are converted to Python types and non-scalar\n","    tensors are converted to Numpy arrays.\n","  \"\"\"\n","  def _to_single_numpy_or_python_type(t):\n","    if isinstance(t, ops.Tensor):\n","      x = t.numpy()\n","      return x.item() if np.ndim(x) == 0 else x\n","    return t  # Don't turn ragged or sparse tensors to NumPy.\n","\n","  return nest.map_structure(_to_single_numpy_or_python_type, tensors)\n"],"execution_count":10,"outputs":[{"output_type":"stream","text":["Overwriting /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wHfsJ5nWLWh9","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085134850,"user_tz":240,"elapsed":204895,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["import matplotlib\n","import matplotlib.pyplot as plt\n","\n","import os\n","import random\n","import io\n","import imageio\n","import glob\n","import scipy.misc\n","import numpy as np\n","from six import BytesIO\n","from PIL import Image, ImageDraw, ImageFont\n","from IPython.display import display, Javascript\n","from IPython.display import Image as IPyImage\n","\n","import tensorflow as tf\n","\n","from object_detection.utils import label_map_util\n","from object_detection.utils import config_util\n","from object_detection.utils import visualization_utils as viz_utils\n","from object_detection.utils import colab_utils\n","from object_detection.builders import model_builder\n","\n","%matplotlib inline"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"wh_HPMOqWH9z","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1596085195631,"user_tz":240,"elapsed":265671,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"4d29d9ee-6379-4119-c6b7-99a5732c0216"},"source":["#run model builder test\n","!python /content/models/research/object_detection/builders/model_builder_tf2_test.py\n"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Running tests under Python 3.6.9: /usr/bin/python3\n","[ RUN      ] ModelBuilderTF2Test.test_create_center_net_model\n","2020-07-30 04:58:57.584919: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1\n","2020-07-30 04:58:57.638316: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:57.638906: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: \n","pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5\n","coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s\n","2020-07-30 04:58:57.639192: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 04:58:57.887474: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-30 04:58:58.001184: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-30 04:58:58.019257: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-30 04:58:58.302739: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-30 04:58:58.366330: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-30 04:58:58.868686: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-30 04:58:58.868861: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:58.869558: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:58.870096: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0\n","2020-07-30 04:58:58.870402: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n","2020-07-30 04:58:58.875365: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 2200000000 Hz\n","2020-07-30 04:58:58.875543: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2eeed80 initialized for platform Host (this does not guarantee that XLA will be used). Devices:\n","2020-07-30 04:58:58.875572: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version\n","2020-07-30 04:58:59.004747: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:59.005492: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2eeebc0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\n","2020-07-30 04:58:59.005527: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\n","2020-07-30 04:58:59.006438: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:59.007023: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: \n","pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5\n","coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s\n","2020-07-30 04:58:59.007099: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 04:58:59.007140: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-30 04:58:59.007171: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-30 04:58:59.007198: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-30 04:58:59.007226: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-30 04:58:59.007253: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-30 04:58:59.007289: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-30 04:58:59.007370: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:59.007958: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:59.008493: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0\n","2020-07-30 04:58:59.008557: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 04:58:59.009859: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-30 04:58:59.009892: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1108]      0 \n","2020-07-30 04:58:59.009915: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 0:   N \n","2020-07-30 04:58:59.010041: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:59.010618: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 04:58:59.011128: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.\n","2020-07-30 04:58:59.011174: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14071 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)\n","[       OK ] ModelBuilderTF2Test.test_create_center_net_model\n","[ RUN      ] ModelBuilderTF2Test.test_create_experimental_model\n","[       OK ] ModelBuilderTF2Test.test_create_experimental_model\n","[ RUN      ] ModelBuilderTF2Test.test_create_faster_rcnn_from_config_with_crop_feature(True)\n","[       OK ] ModelBuilderTF2Test.test_create_faster_rcnn_from_config_with_crop_feature(True)\n","[ RUN      ] ModelBuilderTF2Test.test_create_faster_rcnn_from_config_with_crop_feature(False)\n","[       OK ] ModelBuilderTF2Test.test_create_faster_rcnn_from_config_with_crop_feature(False)\n","[ RUN      ] ModelBuilderTF2Test.test_create_faster_rcnn_model_from_config_with_example_miner\n","[       OK ] ModelBuilderTF2Test.test_create_faster_rcnn_model_from_config_with_example_miner\n","[ RUN      ] ModelBuilderTF2Test.test_create_faster_rcnn_models_from_config_faster_rcnn_with_matmul\n","[       OK ] ModelBuilderTF2Test.test_create_faster_rcnn_models_from_config_faster_rcnn_with_matmul\n","[ RUN      ] ModelBuilderTF2Test.test_create_faster_rcnn_models_from_config_faster_rcnn_without_matmul\n","[       OK ] ModelBuilderTF2Test.test_create_faster_rcnn_models_from_config_faster_rcnn_without_matmul\n","[ RUN      ] ModelBuilderTF2Test.test_create_faster_rcnn_models_from_config_mask_rcnn_with_matmul\n","[       OK ] ModelBuilderTF2Test.test_create_faster_rcnn_models_from_config_mask_rcnn_with_matmul\n","[ RUN      ] ModelBuilderTF2Test.test_create_faster_rcnn_models_from_config_mask_rcnn_without_matmul\n","[       OK ] ModelBuilderTF2Test.test_create_faster_rcnn_models_from_config_mask_rcnn_without_matmul\n","[ RUN      ] ModelBuilderTF2Test.test_create_rfcn_model_from_config\n","[       OK ] ModelBuilderTF2Test.test_create_rfcn_model_from_config\n","[ RUN      ] ModelBuilderTF2Test.test_create_ssd_fpn_model_from_config\n","[       OK ] ModelBuilderTF2Test.test_create_ssd_fpn_model_from_config\n","[ RUN      ] ModelBuilderTF2Test.test_create_ssd_models_from_config\n","I0730 04:59:07.853156 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b0\n","I0730 04:59:07.853348 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 64\n","I0730 04:59:07.853425 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 3\n","I0730 04:59:07.861562 140375767119744 efficientnet_model.py:146] round_filter input=32 output=32\n","I0730 04:59:07.899577 140375767119744 efficientnet_model.py:146] round_filter input=32 output=32\n","I0730 04:59:07.899715 140375767119744 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 04:59:08.001551 140375767119744 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 04:59:08.001693 140375767119744 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 04:59:08.298276 140375767119744 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 04:59:08.298436 140375767119744 efficientnet_model.py:146] round_filter input=40 output=40\n","I0730 04:59:08.618564 140375767119744 efficientnet_model.py:146] round_filter input=40 output=40\n","I0730 04:59:08.618767 140375767119744 efficientnet_model.py:146] round_filter input=80 output=80\n","I0730 04:59:09.089010 140375767119744 efficientnet_model.py:146] round_filter input=80 output=80\n","I0730 04:59:09.089164 140375767119744 efficientnet_model.py:146] round_filter input=112 output=112\n","I0730 04:59:09.547209 140375767119744 efficientnet_model.py:146] round_filter input=112 output=112\n","I0730 04:59:09.547382 140375767119744 efficientnet_model.py:146] round_filter input=192 output=192\n","I0730 04:59:10.299006 140375767119744 efficientnet_model.py:146] round_filter input=192 output=192\n","I0730 04:59:10.299172 140375767119744 efficientnet_model.py:146] round_filter input=320 output=320\n","I0730 04:59:10.433425 140375767119744 efficientnet_model.py:146] round_filter input=1280 output=1280\n","I0730 04:59:10.489457 140375767119744 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.0, depth_coefficient=1.0, resolution=224, dropout_rate=0.2, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","I0730 04:59:10.575438 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b1\n","I0730 04:59:10.575571 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 88\n","I0730 04:59:10.575658 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 4\n","I0730 04:59:10.581844 140375767119744 efficientnet_model.py:146] round_filter input=32 output=32\n","I0730 04:59:10.620717 140375767119744 efficientnet_model.py:146] round_filter input=32 output=32\n","I0730 04:59:10.620855 140375767119744 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 04:59:10.844272 140375767119744 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 04:59:10.844409 140375767119744 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 04:59:11.295877 140375767119744 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 04:59:11.296033 140375767119744 efficientnet_model.py:146] round_filter input=40 output=40\n","I0730 04:59:11.744471 140375767119744 efficientnet_model.py:146] round_filter input=40 output=40\n","I0730 04:59:11.744643 140375767119744 efficientnet_model.py:146] round_filter input=80 output=80\n","I0730 04:59:12.368443 140375767119744 efficientnet_model.py:146] round_filter input=80 output=80\n","I0730 04:59:12.368626 140375767119744 efficientnet_model.py:146] round_filter input=112 output=112\n","I0730 04:59:13.003875 140375767119744 efficientnet_model.py:146] round_filter input=112 output=112\n","I0730 04:59:13.004036 140375767119744 efficientnet_model.py:146] round_filter input=192 output=192\n","I0730 04:59:13.815191 140375767119744 efficientnet_model.py:146] round_filter input=192 output=192\n","I0730 04:59:13.815361 140375767119744 efficientnet_model.py:146] round_filter input=320 output=320\n","I0730 04:59:14.137248 140375767119744 efficientnet_model.py:146] round_filter input=1280 output=1280\n","I0730 04:59:14.196787 140375767119744 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.0, depth_coefficient=1.1, resolution=240, dropout_rate=0.2, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","I0730 04:59:14.479374 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b2\n","I0730 04:59:14.479552 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 112\n","I0730 04:59:14.479648 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 5\n","I0730 04:59:14.486330 140375767119744 efficientnet_model.py:146] round_filter input=32 output=32\n","I0730 04:59:14.525716 140375767119744 efficientnet_model.py:146] round_filter input=32 output=32\n","I0730 04:59:14.525831 140375767119744 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 04:59:14.765547 140375767119744 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 04:59:14.765721 140375767119744 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 04:59:15.237371 140375767119744 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 04:59:15.237542 140375767119744 efficientnet_model.py:146] round_filter input=40 output=48\n","I0730 04:59:15.687461 140375767119744 efficientnet_model.py:146] round_filter input=40 output=48\n","I0730 04:59:15.687642 140375767119744 efficientnet_model.py:146] round_filter input=80 output=88\n","I0730 04:59:16.320554 140375767119744 efficientnet_model.py:146] round_filter input=80 output=88\n","I0730 04:59:16.320732 140375767119744 efficientnet_model.py:146] round_filter input=112 output=120\n","I0730 04:59:16.948565 140375767119744 efficientnet_model.py:146] round_filter input=112 output=120\n","I0730 04:59:16.948770 140375767119744 efficientnet_model.py:146] round_filter input=192 output=208\n","I0730 04:59:17.720492 140375767119744 efficientnet_model.py:146] round_filter input=192 output=208\n","I0730 04:59:17.720680 140375767119744 efficientnet_model.py:146] round_filter input=320 output=352\n","I0730 04:59:18.029793 140375767119744 efficientnet_model.py:146] round_filter input=1280 output=1408\n","I0730 04:59:18.086171 140375767119744 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.1, depth_coefficient=1.2, resolution=260, dropout_rate=0.3, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","I0730 04:59:18.183329 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b3\n","I0730 04:59:18.183470 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 160\n","I0730 04:59:18.183544 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 6\n","I0730 04:59:18.189834 140375767119744 efficientnet_model.py:146] round_filter input=32 output=40\n","I0730 04:59:18.227472 140375767119744 efficientnet_model.py:146] round_filter input=32 output=40\n","I0730 04:59:18.227628 140375767119744 efficientnet_model.py:146] round_filter input=16 output=24\n","I0730 04:59:18.457851 140375767119744 efficientnet_model.py:146] round_filter input=16 output=24\n","I0730 04:59:18.458008 140375767119744 efficientnet_model.py:146] round_filter input=24 output=32\n","I0730 04:59:18.919140 140375767119744 efficientnet_model.py:146] round_filter input=24 output=32\n","I0730 04:59:18.919296 140375767119744 efficientnet_model.py:146] round_filter input=40 output=48\n","I0730 04:59:19.381924 140375767119744 efficientnet_model.py:146] round_filter input=40 output=48\n","I0730 04:59:19.382089 140375767119744 efficientnet_model.py:146] round_filter input=80 output=96\n","I0730 04:59:20.400964 140375767119744 efficientnet_model.py:146] round_filter input=80 output=96\n","I0730 04:59:20.401140 140375767119744 efficientnet_model.py:146] round_filter input=112 output=136\n","I0730 04:59:21.199005 140375767119744 efficientnet_model.py:146] round_filter input=112 output=136\n","I0730 04:59:21.199216 140375767119744 efficientnet_model.py:146] round_filter input=192 output=232\n","I0730 04:59:22.163815 140375767119744 efficientnet_model.py:146] round_filter input=192 output=232\n","I0730 04:59:22.164005 140375767119744 efficientnet_model.py:146] round_filter input=320 output=384\n","I0730 04:59:22.478221 140375767119744 efficientnet_model.py:146] round_filter input=1280 output=1536\n","I0730 04:59:22.539143 140375767119744 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.2, depth_coefficient=1.4, resolution=300, dropout_rate=0.3, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","I0730 04:59:22.643852 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b4\n","I0730 04:59:22.643994 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 224\n","I0730 04:59:22.644068 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 7\n","I0730 04:59:22.650142 140375767119744 efficientnet_model.py:146] round_filter input=32 output=48\n","I0730 04:59:22.686646 140375767119744 efficientnet_model.py:146] round_filter input=32 output=48\n","I0730 04:59:22.686749 140375767119744 efficientnet_model.py:146] round_filter input=16 output=24\n","I0730 04:59:22.935747 140375767119744 efficientnet_model.py:146] round_filter input=16 output=24\n","I0730 04:59:22.935915 140375767119744 efficientnet_model.py:146] round_filter input=24 output=32\n","I0730 04:59:23.591742 140375767119744 efficientnet_model.py:146] round_filter input=24 output=32\n","I0730 04:59:23.591908 140375767119744 efficientnet_model.py:146] round_filter input=40 output=56\n","I0730 04:59:24.241121 140375767119744 efficientnet_model.py:146] round_filter input=40 output=56\n","I0730 04:59:24.241283 140375767119744 efficientnet_model.py:146] round_filter input=80 output=112\n","I0730 04:59:25.216418 140375767119744 efficientnet_model.py:146] round_filter input=80 output=112\n","I0730 04:59:25.216643 140375767119744 efficientnet_model.py:146] round_filter input=112 output=160\n","I0730 04:59:26.156147 140375767119744 efficientnet_model.py:146] round_filter input=112 output=160\n","I0730 04:59:26.156310 140375767119744 efficientnet_model.py:146] round_filter input=192 output=272\n","I0730 04:59:27.713311 140375767119744 efficientnet_model.py:146] round_filter input=192 output=272\n","I0730 04:59:27.713483 140375767119744 efficientnet_model.py:146] round_filter input=320 output=448\n","I0730 04:59:28.022383 140375767119744 efficientnet_model.py:146] round_filter input=1280 output=1792\n","I0730 04:59:28.083697 140375767119744 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.4, depth_coefficient=1.8, resolution=380, dropout_rate=0.4, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","I0730 04:59:28.201654 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b5\n","I0730 04:59:28.201793 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 288\n","I0730 04:59:28.201866 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 7\n","I0730 04:59:28.207924 140375767119744 efficientnet_model.py:146] round_filter input=32 output=48\n","I0730 04:59:28.244072 140375767119744 efficientnet_model.py:146] round_filter input=32 output=48\n","I0730 04:59:28.244179 140375767119744 efficientnet_model.py:146] round_filter input=16 output=24\n","I0730 04:59:28.593350 140375767119744 efficientnet_model.py:146] round_filter input=16 output=24\n","I0730 04:59:28.593511 140375767119744 efficientnet_model.py:146] round_filter input=24 output=40\n","I0730 04:59:29.386266 140375767119744 efficientnet_model.py:146] round_filter input=24 output=40\n","I0730 04:59:29.386434 140375767119744 efficientnet_model.py:146] round_filter input=40 output=64\n","I0730 04:59:30.198326 140375767119744 efficientnet_model.py:146] round_filter input=40 output=64\n","I0730 04:59:30.198503 140375767119744 efficientnet_model.py:146] round_filter input=80 output=128\n","I0730 04:59:31.304616 140375767119744 efficientnet_model.py:146] round_filter input=80 output=128\n","I0730 04:59:31.304778 140375767119744 efficientnet_model.py:146] round_filter input=112 output=176\n","I0730 04:59:32.422098 140375767119744 efficientnet_model.py:146] round_filter input=112 output=176\n","I0730 04:59:32.422263 140375767119744 efficientnet_model.py:146] round_filter input=192 output=304\n","I0730 04:59:33.871522 140375767119744 efficientnet_model.py:146] round_filter input=192 output=304\n","I0730 04:59:33.871720 140375767119744 efficientnet_model.py:146] round_filter input=320 output=512\n","I0730 04:59:34.371958 140375767119744 efficientnet_model.py:146] round_filter input=1280 output=2048\n","I0730 04:59:34.429942 140375767119744 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.6, depth_coefficient=2.2, resolution=456, dropout_rate=0.4, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","I0730 04:59:34.914296 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b6\n","I0730 04:59:34.914464 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 384\n","I0730 04:59:34.914543 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 8\n","I0730 04:59:34.920889 140375767119744 efficientnet_model.py:146] round_filter input=32 output=56\n","I0730 04:59:34.960017 140375767119744 efficientnet_model.py:146] round_filter input=32 output=56\n","I0730 04:59:34.960128 140375767119744 efficientnet_model.py:146] round_filter input=16 output=32\n","I0730 04:59:35.324703 140375767119744 efficientnet_model.py:146] round_filter input=16 output=32\n","I0730 04:59:35.324881 140375767119744 efficientnet_model.py:146] round_filter input=24 output=40\n","I0730 04:59:36.285162 140375767119744 efficientnet_model.py:146] round_filter input=24 output=40\n","I0730 04:59:36.285340 140375767119744 efficientnet_model.py:146] round_filter input=40 output=72\n","I0730 04:59:37.280012 140375767119744 efficientnet_model.py:146] round_filter input=40 output=72\n","I0730 04:59:37.280174 140375767119744 efficientnet_model.py:146] round_filter input=80 output=144\n","I0730 04:59:38.582562 140375767119744 efficientnet_model.py:146] round_filter input=80 output=144\n","I0730 04:59:38.582739 140375767119744 efficientnet_model.py:146] round_filter input=112 output=200\n","I0730 04:59:39.877973 140375767119744 efficientnet_model.py:146] round_filter input=112 output=200\n","I0730 04:59:39.878135 140375767119744 efficientnet_model.py:146] round_filter input=192 output=344\n","I0730 04:59:41.719178 140375767119744 efficientnet_model.py:146] round_filter input=192 output=344\n","I0730 04:59:41.719350 140375767119744 efficientnet_model.py:146] round_filter input=320 output=576\n","I0730 04:59:42.224151 140375767119744 efficientnet_model.py:146] round_filter input=1280 output=2304\n","I0730 04:59:42.291074 140375767119744 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.8, depth_coefficient=2.6, resolution=528, dropout_rate=0.5, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","I0730 04:59:42.444542 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b7\n","I0730 04:59:42.444743 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 384\n","I0730 04:59:42.444837 140375767119744 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 8\n","I0730 04:59:42.452691 140375767119744 efficientnet_model.py:146] round_filter input=32 output=64\n","I0730 04:59:42.490978 140375767119744 efficientnet_model.py:146] round_filter input=32 output=64\n","I0730 04:59:42.491102 140375767119744 efficientnet_model.py:146] round_filter input=16 output=32\n","I0730 04:59:42.978799 140375767119744 efficientnet_model.py:146] round_filter input=16 output=32\n","I0730 04:59:42.978955 140375767119744 efficientnet_model.py:146] round_filter input=24 output=48\n","I0730 04:59:44.117156 140375767119744 efficientnet_model.py:146] round_filter input=24 output=48\n","I0730 04:59:44.117317 140375767119744 efficientnet_model.py:146] round_filter input=40 output=80\n","I0730 04:59:45.673061 140375767119744 efficientnet_model.py:146] round_filter input=40 output=80\n","I0730 04:59:45.673227 140375767119744 efficientnet_model.py:146] round_filter input=80 output=160\n","I0730 04:59:47.314926 140375767119744 efficientnet_model.py:146] round_filter input=80 output=160\n","I0730 04:59:47.315089 140375767119744 efficientnet_model.py:146] round_filter input=112 output=224\n","I0730 04:59:48.960105 140375767119744 efficientnet_model.py:146] round_filter input=112 output=224\n","I0730 04:59:48.960331 140375767119744 efficientnet_model.py:146] round_filter input=192 output=384\n","I0730 04:59:51.137341 140375767119744 efficientnet_model.py:146] round_filter input=192 output=384\n","I0730 04:59:51.137499 140375767119744 efficientnet_model.py:146] round_filter input=320 output=640\n","I0730 04:59:51.831360 140375767119744 efficientnet_model.py:146] round_filter input=1280 output=2560\n","I0730 04:59:51.891273 140375767119744 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=2.0, depth_coefficient=3.1, resolution=600, dropout_rate=0.5, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","[       OK ] ModelBuilderTF2Test.test_create_ssd_models_from_config\n","[ RUN      ] ModelBuilderTF2Test.test_invalid_faster_rcnn_batchnorm_update\n","[       OK ] ModelBuilderTF2Test.test_invalid_faster_rcnn_batchnorm_update\n","[ RUN      ] ModelBuilderTF2Test.test_invalid_first_stage_nms_iou_threshold\n","[       OK ] ModelBuilderTF2Test.test_invalid_first_stage_nms_iou_threshold\n","[ RUN      ] ModelBuilderTF2Test.test_invalid_model_config_proto\n","[       OK ] ModelBuilderTF2Test.test_invalid_model_config_proto\n","[ RUN      ] ModelBuilderTF2Test.test_invalid_second_stage_batch_size\n","[       OK ] ModelBuilderTF2Test.test_invalid_second_stage_batch_size\n","[ RUN      ] ModelBuilderTF2Test.test_session\n","[  SKIPPED ] ModelBuilderTF2Test.test_session\n","[ RUN      ] ModelBuilderTF2Test.test_unknown_faster_rcnn_feature_extractor\n","[       OK ] ModelBuilderTF2Test.test_unknown_faster_rcnn_feature_extractor\n","[ RUN      ] ModelBuilderTF2Test.test_unknown_meta_architecture\n","[       OK ] ModelBuilderTF2Test.test_unknown_meta_architecture\n","[ RUN      ] ModelBuilderTF2Test.test_unknown_ssd_feature_extractor\n","[       OK ] ModelBuilderTF2Test.test_unknown_ssd_feature_extractor\n","----------------------------------------------------------------------\n","Ran 20 tests in 54.693s\n","\n","OK (skipped=1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VA7Zbo3RLt3W","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085195639,"user_tz":240,"elapsed":265675,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["def load_image_into_numpy_array(path):\n","  \"\"\"Load an image from file into a numpy array.\n","\n","  Puts image into numpy array to feed into tensorflow graph.\n","  Note that by convention we put it into a numpy array with shape\n","  (height, width, channels), where channels=3 for RGB.\n","\n","  Args:\n","    path: a file path.\n","\n","  Returns:\n","    uint8 numpy array with shape (img_height, img_width, 3)\n","  \"\"\"\n","  img_data = tf.io.gfile.GFile(path, 'rb').read()\n","  image = Image.open(BytesIO(img_data))\n","  (im_width, im_height) = image.size\n","  return np.array(image.getdata()).reshape(\n","      (im_height, im_width, 3)).astype(np.uint8)\n","\n","def plot_detections(image_np,\n","                    boxes,\n","                    classes,\n","                    scores,\n","                    category_index,\n","                    figsize=(12, 16),\n","                    image_name=None):\n","  \"\"\"Wrapper function to visualize detections.\n","\n","  Args:\n","    image_np: uint8 numpy array with shape (img_height, img_width, 3)\n","    boxes: a numpy array of shape [N, 4]\n","    classes: a numpy array of shape [N]. Note that class indices are 1-based,\n","      and match the keys in the label map.\n","    scores: a numpy array of shape [N] or None.  If scores=None, then\n","      this function assumes that the boxes to be plotted are groundtruth\n","      boxes and plot all boxes as black with no classes or scores.\n","    category_index: a dict containing category dictionaries (each holding\n","      category index `id` and category name `name`) keyed by category indices.\n","    figsize: size for the figure.\n","    image_name: a name for the image file.\n","  \"\"\"\n","  image_np_with_annotations = image_np.copy()\n","  viz_utils.visualize_boxes_and_labels_on_image_array(\n","      image_np_with_annotations,\n","      boxes,\n","      classes,\n","      scores,\n","      category_index,\n","      use_normalized_coordinates=True,\n","      min_score_thresh=0.8)\n","  if image_name:\n","    plt.imsave(image_name, image_np_with_annotations)\n","  else:\n","    plt.imshow(image_np_with_annotations)"],"execution_count":13,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"I2MAcgJ53STW","colab_type":"text"},"source":["# Configure Custom TensorFlow2 Object Detection Training Configuration\n","\n","\n","\n","\n","> In this section you can specify any model in the [TF2 OD model zoo](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf2_detection_zoo.md) and set up your training configuration.\n","\n"]},{"cell_type":"code","metadata":{"id":"gN0EUEa3e5Un","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085195644,"user_tz":240,"elapsed":265676,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["##change chosen model to deploy different models available in the TF2 object detection zoo\n","MODELS_CONFIG = {\n","    'efficientdet-d0': {\n","        'model_name': 'efficientdet_d0_coco17_tpu-32',\n","        'base_pipeline_file': 'ssd_efficientdet_d0_512x512_coco17_tpu-8.config',\n","        'pretrained_checkpoint': 'efficientdet_d0_coco17_tpu-32.tar.gz',\n","        'batch_size': 8\n","    },\n","    'efficientdet-d1': {\n","        'model_name': 'efficientdet_d1_coco17_tpu-32',\n","        'base_pipeline_file': 'ssd_efficientdet_d1_640x640_coco17_tpu-8.config',\n","        'pretrained_checkpoint': 'efficientdet_d1_coco17_tpu-32.tar.gz',\n","        'batch_size': 8\n","    },\n","    'efficientdet-d2': {\n","        'model_name': 'efficientdet_d2_coco17_tpu-32',\n","        'base_pipeline_file': 'ssd_efficientdet_d2_768x768_coco17_tpu-8.config',\n","        'pretrained_checkpoint': 'efficientdet_d2_coco17_tpu-32.tar.gz',\n","        'batch_size': 8\n","    },\n","        'efficientdet-d3': {\n","        'model_name': 'efficientdet_d3_coco17_tpu-32',\n","        'base_pipeline_file': 'ssd_efficientdet_d3_896x896_coco17_tpu-32.config',\n","        'pretrained_checkpoint': 'efficientdet_d3_coco17_tpu-32.tar.gz',\n","        'batch_size': 8\n","    }\n","}\n","\n","#in this tutorial we implement the lightweight, smallest state of the art efficientdet model\n","#if you want to scale up tot larger efficientdet models you will likely need more compute!\n","\n","\n","\n","\n","model_name = MODELS_CONFIG[chosen_model]['model_name']\n","pretrained_checkpoint = MODELS_CONFIG[chosen_model]['pretrained_checkpoint']\n","base_pipeline_file = MODELS_CONFIG[chosen_model]['base_pipeline_file']\n","#batch_size = MODELS_CONFIG[chosen_model][batch_size] #if you can fit a large batch in memory, it may speed up your training"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"kG4TmJUVrYQ7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"status":"ok","timestamp":1596085197822,"user_tz":240,"elapsed":267847,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"8fc5b2d4-55e2-40fd-8b87-2ef991f82fc8"},"source":["#download pretrained weights\n","%mkdir /content/models/research/deploy/\n","%cd /content/models/research/deploy/\n","import tarfile\n","download_tar = 'http://download.tensorflow.org/models/object_detection/tf2/20200711/' + pretrained_checkpoint\n","\n","!wget {download_tar}\n","tar = tarfile.open(pretrained_checkpoint)\n","tar.extractall()\n","tar.close()"],"execution_count":15,"outputs":[{"output_type":"stream","text":["/content/models/research/deploy\n","--2020-07-30 04:59:56--  http://download.tensorflow.org/models/object_detection/tf2/20200711/efficientdet_d0_coco17_tpu-32.tar.gz\n","Resolving download.tensorflow.org (download.tensorflow.org)... 108.177.98.128, 2607:f8b0:400e:c06::80\n","Connecting to download.tensorflow.org (download.tensorflow.org)|108.177.98.128|:80... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 30736482 (29M) [application/x-tar]\n","Saving to: ‘efficientdet_d0_coco17_tpu-32.tar.gz’\n","\n","efficientdet_d0_coc 100%[===================>]  29.31M  --.-KB/s    in 0.1s    \n","\n","2020-07-30 04:59:56 (265 MB/s) - ‘efficientdet_d0_coco17_tpu-32.tar.gz’ saved [30736482/30736482]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"c-nqYZtdtsgG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":255},"executionInfo":{"status":"ok","timestamp":1596085199148,"user_tz":240,"elapsed":269170,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"85bc9adf-caa7-4cdb-a341-ddf988431808"},"source":["#download base training configuration file\n","%cd /content/models/research/deploy\n","download_config = 'https://raw.githubusercontent.com/tensorflow/models/master/research/object_detection/configs/tf2/' + base_pipeline_file\n","!wget {download_config}"],"execution_count":16,"outputs":[{"output_type":"stream","text":["/content/models/research/deploy\n","--2020-07-30 04:59:58--  https://raw.githubusercontent.com/tensorflow/models/master/research/object_detection/configs/tf2/ssd_efficientdet_d0_512x512_coco17_tpu-8.config\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 4630 (4.5K) [text/plain]\n","Saving to: ‘ssd_efficientdet_d0_512x512_coco17_tpu-8.config’\n","\n","ssd_efficientdet_d0 100%[===================>]   4.52K  --.-KB/s    in 0s      \n","\n","2020-07-30 04:59:58 (78.1 MB/s) - ‘ssd_efficientdet_d0_512x512_coco17_tpu-8.config’ saved [4630/4630]\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"b_ki9jOqxn7V","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085199537,"user_tz":240,"elapsed":269554,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["#prepare\n","pipeline_fname = '/content/models/research/deploy/' + base_pipeline_file\n","fine_tune_checkpoint = '/content/models/research/deploy/' + model_name + '/checkpoint/ckpt-0'\n","\n","def get_num_classes(pbtxt_fname):\n","    from object_detection.utils import label_map_util\n","    label_map = label_map_util.load_labelmap(pbtxt_fname)\n","    categories = label_map_util.convert_label_map_to_categories(\n","        label_map, max_num_classes=90, use_display_name=True)\n","    category_index = label_map_util.create_category_index(categories)\n","    return len(category_index.keys())\n","num_classes = get_num_classes(label_map_pbtxt_fname)\n"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"5eA5ht3_yukT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1596085199539,"user_tz":240,"elapsed":269550,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"a063ce04-346e-44c8-d933-9b4da73ba040"},"source":["#write custom configuration file by slotting our dataset, model checkpoint, and training parameters into the base pipeline file\n","\n","import re\n","\n","%cd /content/models/research/deploy\n","print('writing custom configuration file')\n","\n","with open(pipeline_fname) as f:\n","    s = f.read()\n","with open('pipeline_file.config', 'w') as f:\n","    \n","    # fine_tune_checkpoint\n","    s = re.sub('fine_tune_checkpoint: \".*?\"',\n","               'fine_tune_checkpoint: \"{}\"'.format(fine_tune_checkpoint), s)\n","    \n","    # tfrecord files train and test.\n","    s = re.sub(\n","        '(input_path: \".*?)(PATH_TO_BE_CONFIGURED/train)(.*?\")', 'input_path: \"{}\"'.format(train_record_fname), s)\n","    s = re.sub(\n","        '(input_path: \".*?)(PATH_TO_BE_CONFIGURED/val)(.*?\")', 'input_path: \"{}\"'.format(test_record_fname), s)\n","\n","    # label_map_path\n","    s = re.sub(\n","        'label_map_path: \".*?\"', 'label_map_path: \"{}\"'.format(label_map_pbtxt_fname), s)\n","\n","    # Set training batch_size.\n","    s = re.sub('batch_size: [0-9]+',\n","               'batch_size: {}'.format(batch_size), s)\n","\n","    # Set training steps, num_steps\n","    s = re.sub('num_steps: [0-9]+',\n","               'num_steps: {}'.format(num_steps), s)\n","    \n","    # Set number of classes num_classes.\n","    s = re.sub('num_classes: [0-9]+',\n","               'num_classes: {}'.format(num_classes), s)\n","    \n","    #fine-tune checkpoint type\n","    s = re.sub(\n","        'fine_tune_checkpoint_type: \"classification\"', 'fine_tune_checkpoint_type: \"{}\"'.format('detection'), s)\n","        \n","    f.write(s)\n","\n"],"execution_count":18,"outputs":[{"output_type":"stream","text":["/content/models/research/deploy\n","writing custom configuration file\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"HEsOLOMHzBqF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1596085200570,"user_tz":240,"elapsed":270576,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"b9692c75-25ff-4d58-eeff-2e99ad4a924e"},"source":["%cat /content/models/research/deploy/pipeline_file.config\n","#cp /content/models/research/deploy/pipeline_file.config "],"execution_count":19,"outputs":[{"output_type":"stream","text":[" # SSD with EfficientNet-b0 + BiFPN feature extractor,\n","# shared box predictor and focal loss (a.k.a EfficientDet-d0).\n","# See EfficientDet, Tan et al, https://arxiv.org/abs/1911.09070\n","# See Lin et al, https://arxiv.org/abs/1708.02002\n","# Trained on COCO, initialized from an EfficientNet-b0 checkpoint.\n","#\n","# Train on TPU-8\n","\n","model {\n","  ssd {\n","    inplace_batchnorm_update: true\n","    freeze_batchnorm: false\n","    num_classes: 1\n","    add_background_class: false\n","    box_coder {\n","      faster_rcnn_box_coder {\n","        y_scale: 10.0\n","        x_scale: 10.0\n","        height_scale: 5.0\n","        width_scale: 5.0\n","      }\n","    }\n","    matcher {\n","      argmax_matcher {\n","        matched_threshold: 0.5\n","        unmatched_threshold: 0.5\n","        ignore_thresholds: false\n","        negatives_lower_than_unmatched: true\n","        force_match_for_each_row: true\n","        use_matmul_gather: true\n","      }\n","    }\n","    similarity_calculator {\n","      iou_similarity {\n","      }\n","    }\n","    encode_background_as_zeros: true\n","    anchor_generator {\n","      multiscale_anchor_generator {\n","        min_level: 3\n","        max_level: 7\n","        anchor_scale: 4.0\n","        aspect_ratios: [1.0, 2.0, 0.5]\n","        scales_per_octave: 3\n","      }\n","    }\n","    image_resizer {\n","      keep_aspect_ratio_resizer {\n","        min_dimension: 512\n","        max_dimension: 512\n","        pad_to_max_dimension: true\n","        }\n","    }\n","    box_predictor {\n","      weight_shared_convolutional_box_predictor {\n","        depth: 64\n","        class_prediction_bias_init: -4.6\n","        conv_hyperparams {\n","          force_use_bias: true\n","          activation: SWISH\n","          regularizer {\n","            l2_regularizer {\n","              weight: 0.00004\n","            }\n","          }\n","          initializer {\n","            random_normal_initializer {\n","              stddev: 0.01\n","              mean: 0.0\n","            }\n","          }\n","          batch_norm {\n","            scale: true\n","            decay: 0.99\n","            epsilon: 0.001\n","          }\n","        }\n","        num_layers_before_predictor: 3\n","        kernel_size: 3\n","        use_depthwise: true\n","      }\n","    }\n","    feature_extractor {\n","      type: 'ssd_efficientnet-b0_bifpn_keras'\n","      bifpn {\n","        min_level: 3\n","        max_level: 7\n","        num_iterations: 3\n","        num_filters: 64\n","      }\n","      conv_hyperparams {\n","        force_use_bias: true\n","        activation: SWISH\n","        regularizer {\n","          l2_regularizer {\n","            weight: 0.00004\n","          }\n","        }\n","        initializer {\n","          truncated_normal_initializer {\n","            stddev: 0.03\n","            mean: 0.0\n","          }\n","        }\n","        batch_norm {\n","          scale: true,\n","          decay: 0.99,\n","          epsilon: 0.001,\n","        }\n","      }\n","    }\n","    loss {\n","      classification_loss {\n","        weighted_sigmoid_focal {\n","          alpha: 0.25\n","          gamma: 1.5\n","        }\n","      }\n","      localization_loss {\n","        weighted_smooth_l1 {\n","        }\n","      }\n","      classification_weight: 1.0\n","      localization_weight: 1.0\n","    }\n","    normalize_loss_by_num_matches: true\n","    normalize_loc_loss_by_codesize: true\n","    post_processing {\n","      batch_non_max_suppression {\n","        score_threshold: 1e-8\n","        iou_threshold: 0.5\n","        max_detections_per_class: 100\n","        max_total_detections: 100\n","      }\n","      score_converter: SIGMOID\n","    }\n","  }\n","}\n","\n","train_config: {\n","  fine_tune_checkpoint: \"/content/models/research/deploy/efficientdet_d0_coco17_tpu-32/checkpoint/ckpt-0\"\n","  fine_tune_checkpoint_version: V2\n","  fine_tune_checkpoint_type: \"detection\"\n","  batch_size: 8\n","  sync_replicas: true\n","  startup_delay_steps: 0\n","  replicas_to_aggregate: 8\n","  use_bfloat16: true\n","  num_steps: 10\n","  data_augmentation_options {\n","    random_horizontal_flip {\n","    }\n","  }\n","  data_augmentation_options {\n","    random_scale_crop_and_pad_to_square {\n","      output_size: 512\n","      scale_min: 0.1\n","      scale_max: 2.0\n","    }\n","  }\n","  optimizer {\n","    momentum_optimizer: {\n","      learning_rate: {\n","        cosine_decay_learning_rate {\n","          learning_rate_base: 8e-2\n","          total_steps: 300000\n","          warmup_learning_rate: .001\n","          warmup_steps: 2500\n","        }\n","      }\n","      momentum_optimizer_value: 0.9\n","    }\n","    use_moving_average: false\n","  }\n","  max_number_of_boxes: 100\n","  unpad_groundtruth_tensors: false\n","}\n","\n","train_input_reader: {\n","  label_map_path: \"/content/drive/My Drive/reaperRFTest/test/reaper_label_map.pbtxt\"\n","  tf_record_input_reader {\n","    input_path: \"/content/drive/My Drive/reaperRFTest/train/reaper.tfrecord\"\n","  }\n","}\n","\n","eval_config: {\n","  metrics_set: \"coco_detection_metrics\"\n","  use_moving_averages: false\n","  batch_size: 8;\n","}\n","\n","eval_input_reader: {\n","  label_map_path: \"/content/drive/My Drive/reaperRFTest/test/reaper_label_map.pbtxt\"\n","  shuffle: false\n","  num_epochs: 1\n","  tf_record_input_reader {\n","    input_path: \"/content/drive/My Drive/reaperRFTest/test/reaper.tfrecord\"\n","  }\n","}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GMlaN3rs3zLe","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085200577,"user_tz":240,"elapsed":270579,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["pipeline_file = '/content/models/research/deploy/pipeline_file.config'\n"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"XxPj_QV43qD5","colab_type":"text"},"source":["# Train Custom TF2 Object Detector\n","\n","* pipeline_file: defined above in writing custom training configuration\n","* model_dir: the location tensorboard logs and saved model checkpoints will save to\n","* num_train_steps: how long to train for\n","* num_eval_steps: perform eval on validation set after this many steps\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"tQTfZChVzzpZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1596085314553,"user_tz":240,"elapsed":384549,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"c1345777-4b32-4ed8-8559-1d6478c0f20e"},"source":["!python /content/models/research/object_detection/model_main_tf2.py \\\n","    --pipeline_config_path={pipeline_file} \\\n","    --model_dir={model_dir} \\\n","    --alsologtostderr \\\n","    --num_train_steps={num_steps} \\\n","    --sample_1_of_n_eval_examples=1 \\\n","    --num_eval_steps={num_eval_steps}"],"execution_count":21,"outputs":[{"output_type":"stream","text":["2020-07-30 05:00:03.290476: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1\n","2020-07-30 05:00:03.323854: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.324397: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: \n","pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5\n","coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s\n","2020-07-30 05:00:03.324664: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 05:00:03.326309: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-30 05:00:03.327846: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-30 05:00:03.328164: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-30 05:00:03.330115: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-30 05:00:03.331098: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-30 05:00:03.336628: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-30 05:00:03.336743: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.337421: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.337977: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0\n","2020-07-30 05:00:03.338299: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n","2020-07-30 05:00:03.343219: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 2200000000 Hz\n","2020-07-30 05:00:03.343408: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2924bc0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:\n","2020-07-30 05:00:03.343438: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version\n","2020-07-30 05:00:03.446630: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.447265: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2924a00 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\n","2020-07-30 05:00:03.447294: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\n","2020-07-30 05:00:03.447473: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.448076: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: \n","pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5\n","coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s\n","2020-07-30 05:00:03.448175: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 05:00:03.448202: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-30 05:00:03.448224: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-30 05:00:03.448246: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-30 05:00:03.448268: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-30 05:00:03.448287: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-30 05:00:03.448308: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-30 05:00:03.448383: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.449035: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.449539: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0\n","2020-07-30 05:00:03.449645: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 05:00:03.450851: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-30 05:00:03.450878: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1108]      0 \n","2020-07-30 05:00:03.450889: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 0:   N \n","2020-07-30 05:00:03.450993: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.451515: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:00:03.452012: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.\n","2020-07-30 05:00:03.452055: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14071 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)\n","INFO:tensorflow:Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)\n","I0730 05:00:03.454172 139652677126016 mirrored_strategy.py:500] Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)\n","INFO:tensorflow:Maybe overwriting train_steps: 10\n","I0730 05:00:03.458604 139652677126016 config_util.py:552] Maybe overwriting train_steps: 10\n","INFO:tensorflow:Maybe overwriting use_bfloat16: False\n","I0730 05:00:03.458763 139652677126016 config_util.py:552] Maybe overwriting use_bfloat16: False\n","I0730 05:00:03.473745 139652677126016 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b0\n","I0730 05:00:03.473865 139652677126016 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 64\n","I0730 05:00:03.473938 139652677126016 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 3\n","I0730 05:00:03.483457 139652677126016 efficientnet_model.py:146] round_filter input=32 output=32\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.151775 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.154855 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.163434 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.166029 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.191177 139652677126016 efficientnet_model.py:146] round_filter input=32 output=32\n","I0730 05:00:04.191307 139652677126016 efficientnet_model.py:146] round_filter input=16 output=16\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.212484 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.214905 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.222485 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.225065 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.291459 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.293857 139652677126016 cross_device_ops.py:440] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).\n","I0730 05:00:04.318930 139652677126016 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 05:00:04.319033 139652677126016 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 05:00:04.779250 139652677126016 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 05:00:04.779422 139652677126016 efficientnet_model.py:146] round_filter input=40 output=40\n","I0730 05:00:05.163264 139652677126016 efficientnet_model.py:146] round_filter input=40 output=40\n","I0730 05:00:05.163475 139652677126016 efficientnet_model.py:146] round_filter input=80 output=80\n","I0730 05:00:05.731890 139652677126016 efficientnet_model.py:146] round_filter input=80 output=80\n","I0730 05:00:05.732055 139652677126016 efficientnet_model.py:146] round_filter input=112 output=112\n","I0730 05:00:06.289832 139652677126016 efficientnet_model.py:146] round_filter input=112 output=112\n","I0730 05:00:06.289999 139652677126016 efficientnet_model.py:146] round_filter input=192 output=192\n","I0730 05:00:07.046679 139652677126016 efficientnet_model.py:146] round_filter input=192 output=192\n","I0730 05:00:07.046879 139652677126016 efficientnet_model.py:146] round_filter input=320 output=320\n","I0730 05:00:07.231684 139652677126016 efficientnet_model.py:146] round_filter input=1280 output=1280\n","I0730 05:00:07.307695 139652677126016 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.0, depth_coefficient=1.0, resolution=224, dropout_rate=0.2, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","WARNING:tensorflow:num_readers has been reduced to 1 to match input file shards.\n","W0730 05:00:07.652550 139652677126016 dataset_builder.py:83] num_readers has been reduced to 1 to match input file shards.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/object_detection/builders/dataset_builder.py:100: parallel_interleave (from tensorflow.python.data.experimental.ops.interleave_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.data.Dataset.interleave(map_func, cycle_length, block_length, num_parallel_calls=tf.data.experimental.AUTOTUNE)` instead. If sloppy execution is desired, use `tf.data.Options.experimental_deterministic`.\n","W0730 05:00:07.655340 139652677126016 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/object_detection/builders/dataset_builder.py:100: parallel_interleave (from tensorflow.python.data.experimental.ops.interleave_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.data.Dataset.interleave(map_func, cycle_length, block_length, num_parallel_calls=tf.data.experimental.AUTOTUNE)` instead. If sloppy execution is desired, use `tf.data.Options.experimental_deterministic`.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/object_detection/builders/dataset_builder.py:175: DatasetV1.map_with_legacy_function (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.data.Dataset.map()\n","W0730 05:00:07.667138 139652677126016 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/object_detection/builders/dataset_builder.py:175: DatasetV1.map_with_legacy_function (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.data.Dataset.map()\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/object_detection/inputs.py:79: sparse_to_dense (from tensorflow.python.ops.sparse_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Create a `tf.sparse.SparseTensor` and use `tf.sparse.to_dense` instead.\n","W0730 05:00:17.918812 139652677126016 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/object_detection/inputs.py:79: sparse_to_dense (from tensorflow.python.ops.sparse_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Create a `tf.sparse.SparseTensor` and use `tf.sparse.to_dense` instead.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/object_detection/inputs.py:259: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.cast` instead.\n","W0730 05:00:23.983431 139652677126016 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/object_detection/inputs.py:259: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.cast` instead.\n","2020-07-30 05:00:56.917970: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-30 05:00:58.338253: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._groundtruth_lists\n","W0730 05:01:07.920324 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._groundtruth_lists\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor\n","W0730 05:01:07.920718 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._batched_prediction_tensor_names\n","W0730 05:01:07.920821 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._batched_prediction_tensor_names\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head\n","W0730 05:01:07.920902 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads\n","W0730 05:01:07.920975 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._sorted_head_names\n","W0730 05:01:07.921047 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._sorted_head_names\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers\n","W0730 05:01:07.921122 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads\n","W0730 05:01:07.921193 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers\n","W0730 05:01:07.921262 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers\n","W0730 05:01:07.921333 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background\n","W0730 05:01:07.921402 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.0\n","W0730 05:01:07.921471 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.0\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.1\n","W0730 05:01:07.921538 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.2\n","W0730 05:01:07.921622 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.3\n","W0730 05:01:07.921693 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.3\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.4\n","W0730 05:01:07.921761 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._additional_projection_layers.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings\n","W0730 05:01:07.921828 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background\n","W0730 05:01:07.921895 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower\n","W0730 05:01:07.921963 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower\n","W0730 05:01:07.922029 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers.0\n","W0730 05:01:07.922136 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers.0\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers\n","W0730 05:01:07.922209 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0\n","W0730 05:01:07.922284 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1\n","W0730 05:01:07.922365 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2\n","W0730 05:01:07.922431 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3\n","W0730 05:01:07.922498 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4\n","W0730 05:01:07.922564 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0\n","W0730 05:01:07.922829 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1\n","W0730 05:01:07.922917 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2\n","W0730 05:01:07.922996 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3\n","W0730 05:01:07.923070 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4\n","W0730 05:01:07.923149 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.0\n","W0730 05:01:07.923218 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.0\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.1\n","W0730 05:01:07.923287 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.2\n","W0730 05:01:07.923355 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.0\n","W0730 05:01:07.923423 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.0\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.1\n","W0730 05:01:07.923490 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.2\n","W0730 05:01:07.923558 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers.0.depthwise_kernel\n","W0730 05:01:07.923712 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers.0.depthwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers.0.pointwise_kernel\n","W0730 05:01:07.923782 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers.0.pointwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers.0.bias\n","W0730 05:01:07.923852 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._box_prediction_head._box_encoder_layers.0.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers.0\n","W0730 05:01:07.923921 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers.0\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1\n","W0730 05:01:07.924025 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.2\n","W0730 05:01:07.924088 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4\n","W0730 05:01:07.924154 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.5\n","W0730 05:01:07.924215 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7\n","W0730 05:01:07.924275 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.8\n","W0730 05:01:07.924336 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1\n","W0730 05:01:07.924397 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.2\n","W0730 05:01:07.924458 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4\n","W0730 05:01:07.924519 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.5\n","W0730 05:01:07.924579 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7\n","W0730 05:01:07.924654 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.8\n","W0730 05:01:07.924715 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1\n","W0730 05:01:07.924778 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.2\n","W0730 05:01:07.924858 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4\n","W0730 05:01:07.924916 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.5\n","W0730 05:01:07.924989 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7\n","W0730 05:01:07.925050 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.8\n","W0730 05:01:07.925115 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1\n","W0730 05:01:07.925177 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.2\n","W0730 05:01:07.925238 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4\n","W0730 05:01:07.925298 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.5\n","W0730 05:01:07.925360 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7\n","W0730 05:01:07.967840 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.8\n","W0730 05:01:07.967954 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1\n","W0730 05:01:07.968032 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.2\n","W0730 05:01:07.968111 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4\n","W0730 05:01:07.968180 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.5\n","W0730 05:01:07.968236 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7\n","W0730 05:01:07.968291 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.8\n","W0730 05:01:07.968347 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1\n","W0730 05:01:07.968408 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.2\n","W0730 05:01:07.968471 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4\n","W0730 05:01:07.968534 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.5\n","W0730 05:01:07.968626 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7\n","W0730 05:01:07.968699 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.8\n","W0730 05:01:07.968761 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1\n","W0730 05:01:07.968823 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.2\n","W0730 05:01:07.968886 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4\n","W0730 05:01:07.968952 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.5\n","W0730 05:01:07.969016 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7\n","W0730 05:01:07.969080 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.8\n","W0730 05:01:07.969169 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1\n","W0730 05:01:07.969237 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.2\n","W0730 05:01:07.969304 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4\n","W0730 05:01:07.969371 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.5\n","W0730 05:01:07.969436 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7\n","W0730 05:01:07.969511 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.8\n","W0730 05:01:07.969604 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1\n","W0730 05:01:07.969688 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.2\n","W0730 05:01:07.969766 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4\n","W0730 05:01:07.969842 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.5\n","W0730 05:01:07.969919 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7\n","W0730 05:01:07.969996 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.8\n","W0730 05:01:07.970076 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1\n","W0730 05:01:07.970164 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.2\n","W0730 05:01:07.970245 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.2\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4\n","W0730 05:01:07.970323 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.5\n","W0730 05:01:07.970398 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.5\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7\n","W0730 05:01:07.970495 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.8\n","W0730 05:01:07.970576 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.8\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.0.depthwise_kernel\n","W0730 05:01:07.970682 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.0.depthwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.0.pointwise_kernel\n","W0730 05:01:07.970769 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.0.pointwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.0.bias\n","W0730 05:01:07.970851 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.0.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.1.depthwise_kernel\n","W0730 05:01:07.970933 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.1.depthwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.1.pointwise_kernel\n","W0730 05:01:07.971017 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.1.pointwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.1.bias\n","W0730 05:01:07.971109 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.1.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.2.depthwise_kernel\n","W0730 05:01:07.971195 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.2.depthwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.2.pointwise_kernel\n","W0730 05:01:07.971276 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.2.pointwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.2.bias\n","W0730 05:01:07.971368 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.BoxPredictionTower.2.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.0.depthwise_kernel\n","W0730 05:01:07.971445 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.0.depthwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.0.pointwise_kernel\n","W0730 05:01:07.971522 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.0.pointwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.0.bias\n","W0730 05:01:07.971614 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.0.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.1.depthwise_kernel\n","W0730 05:01:07.971698 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.1.depthwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.1.pointwise_kernel\n","W0730 05:01:07.971776 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.1.pointwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.1.bias\n","W0730 05:01:07.971856 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.1.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.2.depthwise_kernel\n","W0730 05:01:07.971935 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.2.depthwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.2.pointwise_kernel\n","W0730 05:01:07.972010 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.2.pointwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.2.bias\n","W0730 05:01:07.972086 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._head_scope_conv_layers.ClassPredictionTower.2.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers.0.depthwise_kernel\n","W0730 05:01:07.972198 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers.0.depthwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers.0.pointwise_kernel\n","W0730 05:01:07.972289 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers.0.pointwise_kernel\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers.0.bias\n","W0730 05:01:07.972372 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._prediction_heads.class_predictions_with_background._class_predictor_layers.0.bias\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.axis\n","W0730 05:01:07.972457 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.gamma\n","W0730 05:01:07.972537 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.beta\n","W0730 05:01:07.972640 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.moving_mean\n","W0730 05:01:07.972742 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.moving_variance\n","W0730 05:01:07.972827 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.axis\n","W0730 05:01:07.972909 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.gamma\n","W0730 05:01:07.972992 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.beta\n","W0730 05:01:07.973074 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.moving_mean\n","W0730 05:01:07.973169 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.moving_variance\n","W0730 05:01:07.973255 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.axis\n","W0730 05:01:07.973339 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.gamma\n","W0730 05:01:07.973421 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.beta\n","W0730 05:01:07.973505 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.moving_mean\n","W0730 05:01:07.973602 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.moving_variance\n","W0730 05:01:07.973701 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.0.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.axis\n","W0730 05:01:07.973799 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.gamma\n","W0730 05:01:07.973877 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.beta\n","W0730 05:01:07.973956 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.moving_mean\n","W0730 05:01:07.974033 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.moving_variance\n","W0730 05:01:07.974123 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.axis\n","W0730 05:01:07.974205 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.gamma\n","W0730 05:01:07.974284 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.beta\n","W0730 05:01:07.974365 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.moving_mean\n","W0730 05:01:07.974444 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.moving_variance\n","W0730 05:01:07.974521 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.axis\n","W0730 05:01:07.974612 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.gamma\n","W0730 05:01:07.974695 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.beta\n","W0730 05:01:07.974774 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.moving_mean\n","W0730 05:01:07.974851 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.moving_variance\n","W0730 05:01:07.974929 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.1.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.axis\n","W0730 05:01:07.975006 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.gamma\n","W0730 05:01:07.975085 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.beta\n","W0730 05:01:07.975173 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.moving_mean\n","W0730 05:01:07.975251 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.moving_variance\n","W0730 05:01:07.975329 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.axis\n","W0730 05:01:07.975406 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.gamma\n","W0730 05:01:07.975483 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.beta\n","W0730 05:01:07.975561 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.moving_mean\n","W0730 05:01:07.975655 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.moving_variance\n","W0730 05:01:07.975735 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.axis\n","W0730 05:01:07.975813 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.gamma\n","W0730 05:01:07.975892 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.beta\n","W0730 05:01:07.975970 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.moving_mean\n","W0730 05:01:07.976047 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.moving_variance\n","W0730 05:01:07.976133 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.2.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.axis\n","W0730 05:01:07.976212 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.gamma\n","W0730 05:01:07.976289 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.beta\n","W0730 05:01:07.976366 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.moving_mean\n","W0730 05:01:07.976446 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.moving_variance\n","W0730 05:01:07.976523 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.axis\n","W0730 05:01:07.976615 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.gamma\n","W0730 05:01:07.976698 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.beta\n","W0730 05:01:07.976775 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.moving_mean\n","W0730 05:01:07.976853 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.moving_variance\n","W0730 05:01:07.976930 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.axis\n","W0730 05:01:07.977009 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.gamma\n","W0730 05:01:07.977089 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.beta\n","W0730 05:01:07.977182 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.moving_mean\n","W0730 05:01:07.977260 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.moving_variance\n","W0730 05:01:07.977339 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.3.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.axis\n","W0730 05:01:07.977417 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.gamma\n","W0730 05:01:07.977494 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.beta\n","W0730 05:01:07.977572 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.moving_mean\n","W0730 05:01:07.977667 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.moving_variance\n","W0730 05:01:07.977747 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.axis\n","W0730 05:01:07.977825 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.gamma\n","W0730 05:01:07.977903 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.beta\n","W0730 05:01:07.977981 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.moving_mean\n","W0730 05:01:07.978059 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.moving_variance\n","W0730 05:01:07.978148 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.axis\n","W0730 05:01:07.978228 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.gamma\n","W0730 05:01:07.978306 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.beta\n","W0730 05:01:07.978385 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.moving_mean\n","W0730 05:01:07.978462 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.moving_variance\n","W0730 05:01:07.978540 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.box_encodings.4.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.axis\n","W0730 05:01:07.978633 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.gamma\n","W0730 05:01:07.978712 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.beta\n","W0730 05:01:07.978792 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.moving_mean\n","W0730 05:01:07.978871 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.moving_variance\n","W0730 05:01:07.978948 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.axis\n","W0730 05:01:07.979025 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.gamma\n","W0730 05:01:07.979107 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.beta\n","W0730 05:01:07.979187 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.moving_mean\n","W0730 05:01:07.979264 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.moving_variance\n","W0730 05:01:07.979340 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.axis\n","W0730 05:01:07.979418 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.gamma\n","W0730 05:01:07.979513 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.beta\n","W0730 05:01:07.979611 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.moving_mean\n","W0730 05:01:07.979701 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.moving_variance\n","W0730 05:01:07.979786 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.0.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.axis\n","W0730 05:01:07.979870 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.gamma\n","W0730 05:01:07.979954 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.beta\n","W0730 05:01:07.980038 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.moving_mean\n","W0730 05:01:07.980128 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.moving_variance\n","W0730 05:01:07.980212 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.axis\n","W0730 05:01:07.980298 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.gamma\n","W0730 05:01:07.980381 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.beta\n","W0730 05:01:07.980463 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.moving_mean\n","W0730 05:01:07.980545 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.moving_variance\n","W0730 05:01:07.980647 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.axis\n","W0730 05:01:07.980733 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.gamma\n","W0730 05:01:07.980840 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.beta\n","W0730 05:01:07.980929 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.moving_mean\n","W0730 05:01:07.981019 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.moving_variance\n","W0730 05:01:07.981117 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.1.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.axis\n","W0730 05:01:07.981211 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.gamma\n","W0730 05:01:07.981299 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.beta\n","W0730 05:01:07.981389 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.moving_mean\n","W0730 05:01:07.981477 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.moving_variance\n","W0730 05:01:07.981566 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.axis\n","W0730 05:01:07.981683 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.gamma\n","W0730 05:01:07.981767 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.beta\n","W0730 05:01:07.981851 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.moving_mean\n","W0730 05:01:07.981943 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.moving_variance\n","W0730 05:01:07.982020 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.axis\n","W0730 05:01:07.982097 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.gamma\n","W0730 05:01:07.982187 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.beta\n","W0730 05:01:07.982264 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.moving_mean\n","W0730 05:01:07.982342 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.moving_variance\n","W0730 05:01:07.982419 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.2.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.axis\n","W0730 05:01:07.982498 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.gamma\n","W0730 05:01:07.982576 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.beta\n","W0730 05:01:07.982697 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.moving_mean\n","W0730 05:01:07.982783 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.moving_variance\n","W0730 05:01:07.982865 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.axis\n","W0730 05:01:07.982951 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.gamma\n","W0730 05:01:07.983056 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.beta\n","W0730 05:01:07.983153 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.moving_mean\n","W0730 05:01:07.983244 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.moving_variance\n","W0730 05:01:07.983342 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.axis\n","W0730 05:01:07.983427 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.gamma\n","W0730 05:01:07.983509 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.beta\n","W0730 05:01:07.983606 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.moving_mean\n","W0730 05:01:07.983696 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.moving_variance\n","W0730 05:01:07.983780 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.3.7.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.axis\n","W0730 05:01:07.983864 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.gamma\n","W0730 05:01:07.983948 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.beta\n","W0730 05:01:07.984043 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.moving_mean\n","W0730 05:01:07.984130 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.moving_variance\n","W0730 05:01:07.984210 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.1.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.axis\n","W0730 05:01:07.984289 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.gamma\n","W0730 05:01:07.984368 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.beta\n","W0730 05:01:07.984447 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.moving_mean\n","W0730 05:01:07.984557 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.moving_variance\n","W0730 05:01:07.984652 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.4.moving_variance\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.axis\n","W0730 05:01:07.984733 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.axis\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.gamma\n","W0730 05:01:07.984813 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.gamma\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.beta\n","W0730 05:01:07.984907 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.beta\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.moving_mean\n","W0730 05:01:07.985004 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.moving_mean\n","WARNING:tensorflow:Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.moving_variance\n","W0730 05:01:07.985082 139652677126016 util.py:144] Unresolved object in checkpoint: (root).model._box_predictor._base_tower_layers_for_heads.class_predictions_with_background.4.7.moving_variance\n","WARNING:tensorflow:A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.\n","W0730 05:01:07.985217 139652677126016 util.py:152] A checkpoint was restored (e.g. tf.train.Checkpoint.restore or tf.keras.Model.load_weights) but not all checkpointed values were used. See above for specific issues. Use expect_partial() on the load status object, e.g. tf.train.Checkpoint.restore(...).expect_partial(), to silence these warnings, or use assert_consumed() to make the check explicit. See https://www.tensorflow.org/guide/checkpoint#loading_mechanics for details.\n","WARNING:tensorflow:num_readers has been reduced to 1 to match input file shards.\n","W0730 05:01:07.997061 139652677126016 dataset_builder.py:83] num_readers has been reduced to 1 to match input file shards.\n","WARNING:tensorflow:Gradients do not exist for variables ['top_bn/gamma:0', 'top_bn/beta:0'] when minimizing the loss.\n","W0730 05:01:18.876921 139648622634752 optimizer_v2.py:1223] Gradients do not exist for variables ['top_bn/gamma:0', 'top_bn/beta:0'] when minimizing the loss.\n","WARNING:tensorflow:Gradients do not exist for variables ['top_bn/gamma:0', 'top_bn/beta:0'] when minimizing the loss.\n","W0730 05:01:31.361582 139648622634752 optimizer_v2.py:1223] Gradients do not exist for variables ['top_bn/gamma:0', 'top_bn/beta:0'] when minimizing the loss.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9KNv1N_hUibE","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085314557,"user_tz":240,"elapsed":384547,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["#run model evaluation to obtain performance metrics\n","#!python /content/models/research/object_detection/model_main_tf2.py \\\n","    #--pipeline_config_path={pipeline_file} \\\n","    #--model_dir={model_dir} \\\n","    #--checkpoint_dir={model_dir} \\\n","#Not yet implemented for EfficientDet"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"TI9iCCxoNlAL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1596085317825,"user_tz":240,"elapsed":387808,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"c56f0b96-320e-4125-9351-b660e93b970d"},"source":["%load_ext tensorboard\n","tensorboard_train_path = model_dir + '/train'\n","%tensorboard --logdir $tensorboard_train_path"],"execution_count":23,"outputs":[{"output_type":"display_data","data":{"application/javascript":["\n","        (async () => {\n","            const url = await google.colab.kernel.proxyPort(6006, {\"cache\": true});\n","            const iframe = document.createElement('iframe');\n","            iframe.src = url;\n","            iframe.setAttribute('width', '100%');\n","            iframe.setAttribute('height', '800');\n","            iframe.setAttribute('frameborder', 0);\n","            document.body.appendChild(iframe);\n","        })();\n","    "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"QXZ5RxipUhWF","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085317827,"user_tz":240,"elapsed":387806,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":[""],"execution_count":23,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4Vk2146Ogil3","colab_type":"text"},"source":["## Exporting a Trained Inference Graph\n","Still to come for TF2 models, we will be updating this Colab notebook accordingly as the functionality is added. "]},{"cell_type":"code","metadata":{"id":"vqaZ4v-vIuDl","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1596085319291,"user_tz":240,"elapsed":389266,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"340ff190-3c3b-4f7c-d803-0dd7324d03ab"},"source":["#see where our model saved weights\n","%ls $model_dir"],"execution_count":24,"outputs":[{"output_type":"stream","text":["checkpoint                  ckpt-1.data-00001-of-00002  \u001b[0m\u001b[01;34mtrain\u001b[0m/\n","ckpt-1.data-00000-of-00002  ckpt-1.index\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YnSEZIzl4M10","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1596085418130,"user_tz":240,"elapsed":488102,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"09f9f1b4-be74-4cab-f031-c001ba0f32ca"},"source":["#run conversion script\n","import re\n","import numpy as np\n","\n","output_directory = '/content/fine_tuned_model'\n","\n","#place the model weights you would like to export here\n","last_model_path = model_dir #'/content/training/'\n","print(last_model_path)\n","!python /content/models/research/object_detection/exporter_main_v2.py \\\n","    --trained_checkpoint_dir {last_model_path} \\\n","    --output_directory {output_directory} \\\n","    --pipeline_config_path {pipeline_file}"],"execution_count":25,"outputs":[{"output_type":"stream","text":["/content/drive/My\\ Drive/reaperRFTest/working\n","I0730 05:02:01.991649 140167713597312 ssd_efficientnet_bifpn_feature_extractor.py:144] EfficientDet EfficientNet backbone version: efficientnet-b0\n","I0730 05:02:01.991852 140167713597312 ssd_efficientnet_bifpn_feature_extractor.py:145] EfficientDet BiFPN num filters: 64\n","I0730 05:02:01.991943 140167713597312 ssd_efficientnet_bifpn_feature_extractor.py:147] EfficientDet BiFPN num iterations: 3\n","I0730 05:02:02.002418 140167713597312 efficientnet_model.py:146] round_filter input=32 output=32\n","2020-07-30 05:02:02.012795: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1\n","2020-07-30 05:02:02.051876: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.052415: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: \n","pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5\n","coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s\n","2020-07-30 05:02:02.052714: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 05:02:02.054509: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-30 05:02:02.056115: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-30 05:02:02.056426: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-30 05:02:02.058396: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-30 05:02:02.061845: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-30 05:02:02.065603: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-30 05:02:02.065742: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.066306: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.066815: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0\n","2020-07-30 05:02:02.067098: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n","2020-07-30 05:02:02.072402: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 2200000000 Hz\n","2020-07-30 05:02:02.072611: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x315cbc0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:\n","2020-07-30 05:02:02.072639: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version\n","2020-07-30 05:02:02.182578: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.183235: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x315ca00 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\n","2020-07-30 05:02:02.183265: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\n","2020-07-30 05:02:02.183445: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.184002: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1561] Found device 0 with properties: \n","pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5\n","coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s\n","2020-07-30 05:02:02.184076: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 05:02:02.184099: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10\n","2020-07-30 05:02:02.184122: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10\n","2020-07-30 05:02:02.184142: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10\n","2020-07-30 05:02:02.184164: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10\n","2020-07-30 05:02:02.184184: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10\n","2020-07-30 05:02:02.184205: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7\n","2020-07-30 05:02:02.184277: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.184836: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.185303: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1703] Adding visible gpu devices: 0\n","2020-07-30 05:02:02.185361: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1\n","2020-07-30 05:02:02.186658: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102] Device interconnect StreamExecutor with strength 1 edge matrix:\n","2020-07-30 05:02:02.186687: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1108]      0 \n","2020-07-30 05:02:02.186698: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1121] 0:   N \n","2020-07-30 05:02:02.186814: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.187372: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n","2020-07-30 05:02:02.187899: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.\n","2020-07-30 05:02:02.187939: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1247] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14071 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)\n","I0730 05:02:02.871178 140167713597312 efficientnet_model.py:146] round_filter input=32 output=32\n","I0730 05:02:02.871351 140167713597312 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 05:02:02.992855 140167713597312 efficientnet_model.py:146] round_filter input=16 output=16\n","I0730 05:02:02.993013 140167713597312 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 05:02:03.289871 140167713597312 efficientnet_model.py:146] round_filter input=24 output=24\n","I0730 05:02:03.290039 140167713597312 efficientnet_model.py:146] round_filter input=40 output=40\n","I0730 05:02:03.599477 140167713597312 efficientnet_model.py:146] round_filter input=40 output=40\n","I0730 05:02:03.599666 140167713597312 efficientnet_model.py:146] round_filter input=80 output=80\n","I0730 05:02:04.147285 140167713597312 efficientnet_model.py:146] round_filter input=80 output=80\n","I0730 05:02:04.147471 140167713597312 efficientnet_model.py:146] round_filter input=112 output=112\n","I0730 05:02:04.607484 140167713597312 efficientnet_model.py:146] round_filter input=112 output=112\n","I0730 05:02:04.607675 140167713597312 efficientnet_model.py:146] round_filter input=192 output=192\n","I0730 05:02:05.224842 140167713597312 efficientnet_model.py:146] round_filter input=192 output=192\n","I0730 05:02:05.225042 140167713597312 efficientnet_model.py:146] round_filter input=320 output=320\n","I0730 05:02:05.361295 140167713597312 efficientnet_model.py:146] round_filter input=1280 output=1280\n","I0730 05:02:05.418998 140167713597312 efficientnet_model.py:459] Building model efficientnet with params ModelConfig(width_coefficient=1.0, depth_coefficient=1.0, resolution=224, dropout_rate=0.2, blocks=(BlockConfig(input_filters=32, output_filters=16, kernel_size=3, num_repeat=1, expand_ratio=1, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=16, output_filters=24, kernel_size=3, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=24, output_filters=40, kernel_size=5, num_repeat=2, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=40, output_filters=80, kernel_size=3, num_repeat=3, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=80, output_filters=112, kernel_size=5, num_repeat=3, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=112, output_filters=192, kernel_size=5, num_repeat=4, expand_ratio=6, strides=(2, 2), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise'), BlockConfig(input_filters=192, output_filters=320, kernel_size=3, num_repeat=1, expand_ratio=6, strides=(1, 1), se_ratio=0.25, id_skip=True, fused_conv=False, conv_type='depthwise')), stem_base_filters=32, top_base_filters=1280, activation='simple_swish', batch_norm='default', bn_momentum=0.99, bn_epsilon=0.001, weight_decay=5e-06, drop_connect_rate=0.2, depth_divisor=8, min_depth=None, use_se=True, input_channels=3, num_classes=1000, model_name='efficientnet', rescale_input=False, data_format='channels_last', dtype='float32')\n","WARNING:tensorflow:Skipping full serialization of Keras layer <object_detection.meta_architectures.ssd_meta_arch.SSDMetaArch object at 0x7f7a793a7b38>, because it is not built.\n","W0730 05:02:31.148528 140167713597312 save_impl.py:76] Skipping full serialization of Keras layer <object_detection.meta_architectures.ssd_meta_arch.SSDMetaArch object at 0x7f7a793a7b38>, because it is not built.\n","2020-07-30 05:02:56.826172: W tensorflow/python/util/util.cc:329] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:16.682997 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:16.683361 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:16.683582 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:16.683774 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:20.802102 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:20.802387 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:20.802601 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:20.802777 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:20.802950 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:20.803098 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:23.329303 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:23.329694 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:23.329924 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:23.330111 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:23.646711 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:23.647034 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:23.647313 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:23.647497 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:23.647723 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:23.647907 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n","Instructions for updating:\n","If using Keras pass *_constraint arguments to layers.\n","W0730 05:03:24.352427 140167713597312 deprecation.py:506] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n","Instructions for updating:\n","If using Keras pass *_constraint arguments to layers.\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:31.964260 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e470>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e400>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a6245e438>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:31.964581 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e97b8>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9828>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a624e9b38>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","I0730 05:03:31.965009 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784c88>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cf8>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62784cc0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], False), {}).\n","INFO:tensorflow:Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","I0730 05:03:31.965207 140167713597312 def_function.py:830] Unsupported signature for serialization: (([(<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb630>, TensorSpec(shape=(None, 64, 64, 40), dtype=tf.float32, name='feature_pyramid/0/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb6a0>, TensorSpec(shape=(None, 32, 32, 112), dtype=tf.float32, name='feature_pyramid/1/1')), (<tensorflow.python.framework.func_graph.UnknownArgument object at 0x7f7a62abb9b0>, TensorSpec(shape=(None, 16, 16, 320), dtype=tf.float32, name='feature_pyramid/2/1'))], True), {}).\n","INFO:tensorflow:Assets written to: /content/fine_tuned_model/saved_model/assets\n","I0730 05:03:33.163035 140167713597312 builder_impl.py:775] Assets written to: /content/fine_tuned_model/saved_model/assets\n","INFO:tensorflow:Writing pipeline config file to /content/fine_tuned_model/pipeline.config\n","I0730 05:03:34.803064 140167713597312 config_util.py:254] Writing pipeline config file to /content/fine_tuned_model/pipeline.config\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TsE_uVjlsz3u","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1596085419321,"user_tz":240,"elapsed":489290,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"64a4796c-aac8-4a82-df47-b3c645864f83"},"source":["%ls '/content/fine_tuned_model/saved_model/'"],"execution_count":26,"outputs":[{"output_type":"stream","text":["\u001b[0m\u001b[01;34massets\u001b[0m/  saved_model.pb  \u001b[01;34mvariables\u001b[0m/\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7Vz2vJeCCyZR","colab_type":"text"},"source":["# Run Inference on Test Images with Custom TensorFlow2 Object Detector"]},{"cell_type":"code","metadata":{"id":"xxtm1NutE5vK","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085419326,"user_tz":240,"elapsed":489288,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["\n","import matplotlib\n","import matplotlib.pyplot as plt\n","\n","import io\n","import scipy.misc\n","import numpy as np\n","from six import BytesIO\n","from PIL import Image, ImageDraw, ImageFont\n","\n","import tensorflow as tf\n","\n","from object_detection.utils import label_map_util\n","from object_detection.utils import config_util\n","from object_detection.utils import visualization_utils as viz_utils\n","from object_detection.builders import model_builder\n","\n","%matplotlib inline"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"qs1HJnEhyevJ","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085419328,"user_tz":240,"elapsed":489285,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["def load_image_into_numpy_array(path):\n","  \"\"\"Load an image from file into a numpy array.\n","\n","  Puts image into numpy array to feed into tensorflow graph.\n","  Note that by convention we put it into a numpy array with shape\n","  (height, width, channels), where channels=3 for RGB.\n","\n","  Args:\n","    path: the file path to the image\n","\n","  Returns:\n","    uint8 numpy array with shape (img_height, img_width, 3)\n","  \"\"\"\n","  img_data = tf.io.gfile.GFile(path, 'rb').read()\n","  image = Image.open(BytesIO(img_data))\n","  (im_width, im_height) = image.size\n","  return np.array(image.getdata()).reshape(\n","      (im_height, im_width, 3)).astype(np.uint8)"],"execution_count":28,"outputs":[]},{"cell_type":"code","metadata":{"id":"0f6DTolSDfXs","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"status":"ok","timestamp":1596085420349,"user_tz":240,"elapsed":490303,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"ab47d85f-5c23-4de0-df21-8f8ee72c4790"},"source":["%ls $model_dir #'/content/training/'"],"execution_count":29,"outputs":[{"output_type":"stream","text":["checkpoint                  ckpt-1.data-00001-of-00002  \u001b[0m\u001b[01;34mtrain\u001b[0m/\n","ckpt-1.data-00000-of-00002  ckpt-1.index\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gFY75DfTDHaU","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085426896,"user_tz":240,"elapsed":496845,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["#recover our saved model\n","pipeline_config = pipeline_file\n","#generally you want to put the last ckpt from training in here\n","ckpt_dir = model__dir + '/ckpt-1'  #'/content/training/ckpt-2'\n","configs = config_util.get_configs_from_pipeline_file(pipeline_config)\n","model_config = configs['model']\n","detection_model = model_builder.build(\n","  model_config=model_config, is_training=False)\n","\n","# Restore checkpoint\n","ckpt = tf.compat.v2.train.Checkpoint(\n","model=detection_model)\n","ckpt.restore(ckpt_dir)\n","\n","\n","def get_model_detection_function(model):\n","  \"\"\"Get a tf.function for detection.\"\"\"\n","\n","  @tf.function\n","  def detect_fn(image):\n","    \"\"\"Detect objects in image.\"\"\"\n","\n","    image, shapes = model.preprocess(image)\n","    prediction_dict = model.predict(image, shapes)\n","    detections = model.postprocess(prediction_dict, shapes)\n","\n","    return detections, prediction_dict, tf.reshape(shapes, [-1])\n","\n","  return detect_fn\n","\n","detect_fn = get_model_detection_function(detection_model)"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"id":"-Ycfl7rnDT1D","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596085426901,"user_tz":240,"elapsed":496844,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}}},"source":["#map labels for inference decoding\n","label_map_path = configs['eval_input_config'].label_map_path\n","label_map = label_map_util.load_labelmap(label_map_path)\n","categories = label_map_util.convert_label_map_to_categories(\n","    label_map,\n","    max_num_classes=label_map_util.get_max_label_map_index(label_map),\n","    use_display_name=True)\n","category_index = label_map_util.create_category_index(categories)\n","label_map_dict = label_map_util.get_label_map_dict(label_map, use_display_name=True)"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"wN1BzORoIzV4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":334},"executionInfo":{"status":"error","timestamp":1596085865606,"user_tz":240,"elapsed":2847,"user":{"displayName":"Tenser fLOW","photoUrl":"","userId":"17367921152229091554"}},"outputId":"f6ca3f90-6ee4-47dd-fa01-850f89fb5afb"},"source":["#run detector on test image\n","#it takes a little longer on the first run and then runs at normal speed. \n","import random\n","\n","#TEST_IMAGE_PATHS = glob.glob('/content/test/test/*.jpg')\n","TEST_IMAGE_PATHS = glob.glob('/content/drive/My Drive/reaperRFTest/images/*.png')\n","image_path = random.choice(TEST_IMAGE_PATHS)\n","image_np = load_image_into_numpy_array(image_path)\n","\n","# Things to try:\n","# Flip horizontally\n","# image_np = np.fliplr(image_np).copy()\n","\n","# Convert image to grayscale\n","# image_np = np.tile(\n","#     np.mean(image_np, 2, keepdims=True), (1, 1, 3)).astype(np.uint8)\n","\n","input_tensor = tf.convert_to_tensor(\n","    np.expand_dims(image_np, 0), dtype=tf.float32)\n","detections, predictions_dict, shapes = detect_fn(input_tensor)\n","\n","label_id_offset = 1\n","image_np_with_detections = image_np.copy()\n","\n","viz_utils.visualize_boxes_and_labels_on_image_array(\n","      image_np_with_detections,\n","      detections['detection_boxes'][0].numpy(),\n","      (detections['detection_classes'][0].numpy() + label_id_offset).astype(int),\n","      detections['detection_scores'][0].numpy(),\n","      category_index,\n","      use_normalized_coordinates=True,\n","      max_boxes_to_draw=200,\n","      min_score_thresh=.5,\n","      agnostic_mode=False,\n",")\n","\n","plt.figure(figsize=(12,16))\n","plt.imshow(image_np_with_detections)\n","plt.show()"],"execution_count":35,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-35-300aa3dae341>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mTEST_IMAGE_PATHS\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mglob\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mglob\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/My Drive/reaperRFTest/images/*.png'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mimage_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mchoice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mTEST_IMAGE_PATHS\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mimage_np\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_image_into_numpy_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimage_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Things to try:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-28-2841af899c5f>\u001b[0m in \u001b[0;36mload_image_into_numpy_array\u001b[0;34m(path)\u001b[0m\n\u001b[1;32m     16\u001b[0m   \u001b[0;34m(\u001b[0m\u001b[0mim_width\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mim_height\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m   return np.array(image.getdata()).reshape(\n\u001b[0;32m---> 18\u001b[0;31m       (im_height, im_width, 3)).astype(np.uint8)\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: cannot reshape array of size 8294400 into shape (1080,1920,3)"]}]},{"cell_type":"markdown","metadata":{"id":"zQ-N94cKB82o","colab_type":"text"},"source":["## Congrats!\n","\n","Hope you enjoyed this!\n","\n","--Team [Roboflow](https://roboflow.ai)\n"]}]}