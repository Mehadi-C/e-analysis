{"ast":null,"code":"var _jsxFileName = \"/home/homeperson/Documents/programming/projects/eanalysis/_FINAL/e-analysis/frontend/react/src/components/upload/Upload.js\";\nimport React, { useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport './Upload.css';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\n\nconst Upload = () => {\n  const [controls, setControls] = useState(true);\n  const [image, setImage] = useState('');\n  const [video, setVideo] = useState('');\n  const maxSize = 30 * 1024 * 1024;\n\n  function sendtoserver(files) {\n    let formData = new FormData();\n    formData.append('file', files[0]);\n    console.log(files);\n    const options = {};\n    axios.post('http://127.0.0.1:5000/api', formData, options).then(res => {\n      console.log(res);\n      setTimeout(() => {\n        console.log(res.data.img);\n\n        if (res.data.img !== undefined) {\n          setImage('http://127.0.0.1:5000/img/' + res.data.img);\n        }\n\n        if (res.data.vid !== undefined) {\n          setVideo('http://127.0.0.1:5000/img/' + res.data.vid);\n        } // setProgress(0);\n        // setCurrentlyUpload(false);\n\n      }, 2000);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const onDrop = acceptedFiles => {\n    sendtoserver(acceptedFiles);\n  };\n\n  const handleOnSubmit = ({\n    target: {\n      files\n    }\n  }) => {\n    sendtoserver(files);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Upload Image or Video\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: maxSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: \"file-container\"\n  }), {\n    onChange: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 41\n    }\n  }, \"Drop Image or Video Here \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleOnSubmit,\n    name: \"upfile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Result:\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: video,\n    controls: controls,\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/homeperson/Documents/programming/projects/eanalysis/_FINAL/e-analysis/frontend/react/src/components/upload/Upload.js"],"names":["React","useState","ReactPlayer","axios","Dropzone","Upload","controls","setControls","image","setImage","video","setVideo","maxSize","sendtoserver","files","formData","FormData","append","console","log","options","post","then","res","setTimeout","data","img","undefined","vid","catch","err","onDrop","acceptedFiles","handleOnSubmit","target","getRootProps","getInputProps","className"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport ReactPlayer from 'react-player'\nimport './Upload.css';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\n\n\n\nconst Upload=()=>{\n    const [controls,setControls]=useState(true);\n    const [image,setImage]=useState('');\n    const [video,setVideo]=useState('');\n    const maxSize = 30 * 1024 * 1024\n    function sendtoserver(files){\n        let formData=new FormData();\n        formData.append('file',files[0]);\n        console.log(files)\n        const options={}\n        \n        axios.post('http://127.0.0.1:5000/api',formData,options).then(res=>\n        { \n                console.log(res)\n                setTimeout(()=>{\n                    console.log(res.data.img);\n                    if(res.data.img !== undefined){\n                        setImage('http://127.0.0.1:5000/img/'+res.data.img);\n                    }\n                    if(res.data.vid !== undefined){\n                        setVideo('http://127.0.0.1:5000/img/'+res.data.vid);\n                    }\n                                                                      \n                    // setProgress(0);\n                    // setCurrentlyUpload(false);\n                },2000)\n        }\n        ).catch((err)=>{\n            console.log(err);\n        });\n    \n    }\n    const onDrop=(acceptedFiles)=>{\n        sendtoserver(acceptedFiles)\n    }\n    const handleOnSubmit=  ({target:{files}})=>{\n        sendtoserver(files)\n    }\n    \n    return(\n        <>\n        {\n            (\n                \n                <div className=\"container\">\n                {\n                    (\n                    <>\n                        <h3>Upload Image or Video</h3>\n                        <Dropzone onDrop={onDrop} multiple={false} maxSize={maxSize}>\n                            {\n                                ({ getRootProps,getInputProps })=>(\n                                    <div {...getRootProps({ className: \"file-container\" })} onChange={handleOnSubmit}>\n                                        <input {...getInputProps()} />\n                                        {/* <img src={Image} alt=\"example\"/> */}\n                                        <p>Drop Image or Video Here </p>\n                                        <input type=\"file\"  onChange={handleOnSubmit} name=\"upfile\"/>\n                                    </div>\n                                )\n                            }\n                           \n                        </Dropzone>\n                        \n                     </>  \n                    )\n                }\n    \n             </div>\n            )\n        }       \n        <div className=\"content\">\n            <h4>Result:</h4>\n            <img src={image}/>\n            <ReactPlayer url={video} controls={controls} width='100%' height='100%'/>\n        </div>\n         </>\n    )\n};\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}