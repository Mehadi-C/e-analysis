{"ast":null,"code":"var _jsxFileName = \"/home/homeperson/Documents/programming/projects/eanalysis/_FINAL/e-analysis/frontend/react/src/components/upload/Upload.js\";\nimport React, { useState, setState } from 'react';\nimport ReactPlayer from 'react-player';\nimport './Upload.css'; // import './Upload.scss';\n// import Image from './logo.svg';\n\nimport axios from 'axios'; // import {CopyToClipboard } from 'react-copy-to-clipboard';\n// import {MdDone} from 'react-icons/md';\n\nimport Dropzone from 'react-dropzone';\n\nconst Upload = () => {\n  function sendtoserver(files) {\n    let formData = new FormData();\n    formData.append('file', files[0]);\n    console.log(files);\n    const options = {// onUploadProgress: (progressEvent)=>{\n      //    const {loaded,total} = progressEvent;\n      //    let percent =Math.floor((loaded*100)/total);\n      //    console.log(`${loaded}kb of ${total} kb | ${percent} % `);\n      //    if(percent>0 && percent<100){\n      //         setProgress(percent);\n      //         setCurrentlyUpload(true);\n      //    }\n      //   }\n    };\n    axios.post('http://127.0.0.1:5000/api', formData, options).then(res => {\n      console.log(res);\n      setTimeout(() => {\n        console.log(res.data.img);\n\n        if (res.data.img != undefined) {\n          setImage('http://127.0.0.1:5000/img/' + res.data.img);\n        }\n\n        if (res.data.vid != undefined) {\n          setVideo('http://127.0.0.1:5000/img/' + res.data.vid);\n        }\n\n        setProgress(0);\n        setCurrentlyUpload(false);\n      }, 2000);\n    }).catch(err => {\n      console.log(err);\n\n      if (err.response.status === 400) {\n        const errMsg = err.response.data;\n        console.log(err.response.data.errors);\n        setError({\n          found: true,\n          message: err.response.data.errors\n        });\n\n        if (errMsg) {\n          console.log(errMsg);\n        }\n      } else {\n        console.log('Another error %s', err);\n      }\n    });\n  } // const [image,setImage]=useState(null);\n\n\n  const [progress, setProgress] = useState(null);\n  const [controls, setControls] = useState(true);\n  const [currentlyUpload, setCurrentlyUpload] = useState(false);\n  const [error, setError] = useState({\n    found: false,\n    message: ''\n  });\n  const [image, setImage] = useState('');\n  const [video, setVideo] = useState(''); // const [copied,setCopied]=useState(false);\n\n  const maxSize = 30 * 1024 * 1024; // const onCopyText=()=>{\n  //     setCopied(true)\n  //     setTimeout(() => {\n  //         setCopied(false)\n  //     }, 1000);\n  // }\n\n  const onDrop = acceptedFiles => {\n    console.log(acceptedFiles);\n    sendtoserver(acceptedFiles);\n  };\n\n  const handleOnSubmit = ({\n    target: {\n      files\n    }\n  }) => {\n    sendtoserver(files);\n    let formData = new FormData();\n    formData.append('file', files[0]);\n    const options = {// onUploadProgress: (progressEvent)=>{\n      //    const {loaded,total} = progressEvent;\n      //    let percent =Math.floor((loaded*100)/total);\n      //    console.log(`${loaded}kb of ${total} kb | ${percent} % `);\n      //    if(percent>0 && percent<100){\n      //         setProgress(percent);\n      //         setCurrentlyUpload(true);\n      //    }\n      //   }\n    };\n    axios.post('http://127.0.0.1:5000/api', formData, options).then(res => {\n      console.log(res);\n      setTimeout(() => {\n        console.log(res.data.img);\n\n        if (res.data.img != undefined) {\n          setImage('http://127.0.0.1:5000/img/' + res.data.img);\n        }\n\n        if (res.data.vid != undefined) {\n          setVideo('http://127.0.0.1:5000/img/' + res.data.vid);\n        }\n\n        setProgress(0);\n        setCurrentlyUpload(false);\n      }, 2000);\n    }).catch(err => {\n      console.log(err);\n\n      if (err.response.status === 400) {\n        const errMsg = err.response.data;\n        console.log(err.response.data.errors);\n        setError({\n          found: true,\n          message: err.response.data.errors\n        });\n\n        if (errMsg) {\n          console.log(errMsg);\n        }\n      } else {\n        console.log('Another error %s', err);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"Upload Image or Video\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: maxSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: \"file-container\"\n  }), {\n    onChange: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 41\n    }\n  }, \"Drop Image or Video Here \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleOnSubmit,\n    name: \"upfile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Result:\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ReactPlayer, {\n    url: video,\n    controls: controls,\n    width: \"100%\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/homeperson/Documents/programming/projects/eanalysis/_FINAL/e-analysis/frontend/react/src/components/upload/Upload.js"],"names":["React","useState","setState","ReactPlayer","axios","Dropzone","Upload","sendtoserver","files","formData","FormData","append","console","log","options","post","then","res","setTimeout","data","img","undefined","setImage","vid","setVideo","setProgress","setCurrentlyUpload","catch","err","response","status","errMsg","errors","setError","found","message","progress","controls","setControls","currentlyUpload","error","image","video","maxSize","onDrop","acceptedFiles","handleOnSubmit","target","getRootProps","getInputProps","className"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,cAAP,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAIA,MAAMC,MAAM,GAAC,MAAI;AACb,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,QAAIC,QAAQ,GAAC,IAAIC,QAAJ,EAAb;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBH,KAAK,CAAC,CAAD,CAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,UAAMM,OAAO,GAAC,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAVU,KAAd;AAcAV,IAAAA,KAAK,CAACW,IAAN,CAAW,2BAAX,EAAuCN,QAAvC,EAAgDK,OAAhD,EAAyDE,IAAzD,CAA8DC,GAAG,IACjE;AACQL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAC,MAAAA,UAAU,CAAC,MAAI;AACXN,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACE,IAAJ,CAASC,GAArB;;AACA,YAAGH,GAAG,CAACE,IAAJ,CAASC,GAAT,IAAgBC,SAAnB,EAA6B;AACzBC,UAAAA,QAAQ,CAAC,+BAA6BL,GAAG,CAACE,IAAJ,CAASC,GAAvC,CAAR;AACH;;AACD,YAAGH,GAAG,CAACE,IAAJ,CAASI,GAAT,IAAgBF,SAAnB,EAA6B;AACzBG,UAAAA,QAAQ,CAAC,+BAA6BP,GAAG,CAACE,IAAJ,CAASI,GAAvC,CAAR;AACH;;AAEDE,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAC,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,OAXS,EAWR,IAXQ,CAAV;AAYP,KAfD,EAgBEC,KAhBF,CAgBSC,GAAD,IAAO;AACXhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;;AACA,UAAGA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA3B,EAA+B;AAC3B,cAAMC,MAAM,GAACH,GAAG,CAACC,QAAJ,CAAaV,IAA1B;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACC,QAAJ,CAAaV,IAAb,CAAkBa,MAA9B;AACAC,QAAAA,QAAQ,CAAC;AACLC,UAAAA,KAAK,EAAC,IADD;AAELC,UAAAA,OAAO,EAACP,GAAG,CAACC,QAAJ,CAAaV,IAAb,CAAkBa;AAFrB,SAAD,CAAR;;AAIA,YAAGD,MAAH,EAAU;AACNnB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,MAAZ;AACH;AACJ,OAVD,MAUK;AACDnB,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+Be,GAA/B;AACH;AACJ,KA/BD;AAiCH,GApDY,CAqDb;;;AACA,QAAM,CAACQ,QAAD,EAAUX,WAAV,IAAuBxB,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACoC,QAAD,EAAUC,WAAV,IAAuBrC,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACsC,eAAD,EAAiBb,kBAAjB,IAAqCzB,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAACuC,KAAD,EAAOP,QAAP,IAAiBhC,QAAQ,CAAC;AAC5BiC,IAAAA,KAAK,EAAC,KADsB;AAE5BC,IAAAA,OAAO,EAAE;AAFmB,GAAD,CAA/B;AAIA,QAAM,CAACM,KAAD,EAAOnB,QAAP,IAAiBrB,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACyC,KAAD,EAAOlB,QAAP,IAAiBvB,QAAQ,CAAC,EAAD,CAA/B,CA9Da,CAgEb;;AACA,QAAM0C,OAAO,GAAG,KAAK,IAAL,GAAY,IAA5B,CAjEa,CAkEb;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,MAAM,GAAEC,aAAD,IAAiB;AAC1BjC,IAAAA,OAAO,CAACC,GAAR,CAAYgC,aAAZ;AACAtC,IAAAA,YAAY,CAACsC,aAAD,CAAZ;AACH,GAHD;;AAKA,QAAMC,cAAc,GAAG,CAAC;AAACC,IAAAA,MAAM,EAAC;AAACvC,MAAAA;AAAD;AAAR,GAAD,KAAoB;AAC/BD,IAAAA,YAAY,CAACC,KAAD,CAAZ;AACA,QAAIC,QAAQ,GAAC,IAAIC,QAAJ,EAAb;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBH,KAAK,CAAC,CAAD,CAA5B;AACA,UAAMM,OAAO,GAAC,CACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAVU,KAAd;AAcAV,IAAAA,KAAK,CAACW,IAAN,CAAW,2BAAX,EAAuCN,QAAvC,EAAgDK,OAAhD,EAAyDE,IAAzD,CAA8DC,GAAG,IACjE;AACQL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAC,MAAAA,UAAU,CAAC,MAAI;AACXN,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACE,IAAJ,CAASC,GAArB;;AACA,YAAGH,GAAG,CAACE,IAAJ,CAASC,GAAT,IAAgBC,SAAnB,EAA6B;AACzBC,UAAAA,QAAQ,CAAC,+BAA6BL,GAAG,CAACE,IAAJ,CAASC,GAAvC,CAAR;AACH;;AACD,YAAGH,GAAG,CAACE,IAAJ,CAASI,GAAT,IAAgBF,SAAnB,EAA6B;AACzBG,UAAAA,QAAQ,CAAC,+BAA6BP,GAAG,CAACE,IAAJ,CAASI,GAAvC,CAAR;AACH;;AAEDE,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAC,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,OAXS,EAWR,IAXQ,CAAV;AAYP,KAfD,EAgBEC,KAhBF,CAgBSC,GAAD,IAAO;AACXhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;;AACA,UAAGA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA3B,EAA+B;AAC3B,cAAMC,MAAM,GAACH,GAAG,CAACC,QAAJ,CAAaV,IAA1B;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACC,QAAJ,CAAaV,IAAb,CAAkBa,MAA9B;AACAC,QAAAA,QAAQ,CAAC;AACLC,UAAAA,KAAK,EAAC,IADD;AAELC,UAAAA,OAAO,EAACP,GAAG,CAACC,QAAJ,CAAaV,IAAb,CAAkBa;AAFrB,SAAD,CAAR;;AAIA,YAAGD,MAAH,EAAU;AACNnB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,MAAZ;AACH;AACJ,OAVD,MAUK;AACDnB,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+Be,GAA/B;AACH;AACJ,KA/BD;AAiCX,GAnDD;;AAoDA,sBACI,uDAIQ;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAGI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEgB,MAAlB;AAA0B,IAAA,QAAQ,EAAE,KAApC;AAA2C,IAAA,OAAO,EAAED,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAAC;AAAEK,IAAAA,YAAF;AAAeC,IAAAA;AAAf,GAAD,kBACI,6CAASD,YAAY,CAAC;AAAEE,IAAAA,SAAS,EAAE;AAAb,GAAD,CAArB;AAAwD,IAAA,QAAQ,EAAEJ,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,+CAAWG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAHJ,eAII;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAoB,IAAA,QAAQ,EAAEH,cAA9B;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAHZ,CAHJ,CAHJ,CAJR,eAgCA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,IAAA,GAAG,EAAEL,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEC,KAAlB;AAAyB,IAAA,QAAQ,EAAEL,QAAnC;AAA6C,IAAA,KAAK,EAAC,MAAnD;AAA0D,IAAA,MAAM,EAAC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAhCA,CADJ;AAwCH,CAzKD;;AA2KA,eAAe/B,MAAf","sourcesContent":["import React,{useState,setState} from 'react';\nimport ReactPlayer from 'react-player'\nimport './Upload.css';\n// import './Upload.scss';\n// import Image from './logo.svg';\nimport axios from 'axios';\n// import {CopyToClipboard } from 'react-copy-to-clipboard';\n// import {MdDone} from 'react-icons/md';\nimport Dropzone from 'react-dropzone';\n\n\n\nconst Upload=()=>{\n    function sendtoserver(files){\n        let formData=new FormData();\n        formData.append('file',files[0]);\n        console.log(files)\n        const options={\n            // onUploadProgress: (progressEvent)=>{\n            //    const {loaded,total} = progressEvent;\n            //    let percent =Math.floor((loaded*100)/total);\n            //    console.log(`${loaded}kb of ${total} kb | ${percent} % `);\n            //    if(percent>0 && percent<100){\n            //         setProgress(percent);\n            //         setCurrentlyUpload(true);\n            //    }\n    \n            //   }\n    \n        }\n        \n        axios.post('http://127.0.0.1:5000/api',formData,options).then(res=>\n        { \n                console.log(res)\n                setTimeout(()=>{\n                    console.log(res.data.img);\n                    if(res.data.img != undefined){\n                        setImage('http://127.0.0.1:5000/img/'+res.data.img);\n                    }\n                    if(res.data.vid != undefined){\n                        setVideo('http://127.0.0.1:5000/img/'+res.data.vid);\n                    }\n                                                                      \n                    setProgress(0);\n                    setCurrentlyUpload(false);\n                },2000)\n        }\n        ).catch((err)=>{\n            console.log(err);\n            if(err.response.status === 400){\n                const errMsg=err.response.data;\n                console.log(err.response.data.errors)\n                setError({\n                    found:true,\n                    message:err.response.data.errors\n                })\n                if(errMsg){ \n                    console.log(errMsg)\n                }\n            }else{\n                console.log('Another error %s',err)\n            }\n        });\n    \n    }\n    // const [image,setImage]=useState(null);\n    const [progress,setProgress]=useState(null);\n    const [controls,setControls]=useState(true);\n    const [currentlyUpload,setCurrentlyUpload]=useState(false);\n    const [error,setError]=useState({\n        found:false,\n        message: ''\n    });\n    const [image,setImage]=useState('');\n    const [video,setVideo]=useState('');\n    \n    // const [copied,setCopied]=useState(false);\n    const maxSize = 30 * 1024 * 1024\n    // const onCopyText=()=>{\n    //     setCopied(true)\n    //     setTimeout(() => {\n    //         setCopied(false)\n    //     }, 1000);\n    // }\n    const onDrop=(acceptedFiles)=>{\n        console.log(acceptedFiles)\n        sendtoserver(acceptedFiles)\n    }\n   \n    const handleOnSubmit=  ({target:{files}})=>{\n                sendtoserver(files)\n                let formData=new FormData();\n                formData.append('file',files[0]);\n                const options={\n                    // onUploadProgress: (progressEvent)=>{\n                    //    const {loaded,total} = progressEvent;\n                    //    let percent =Math.floor((loaded*100)/total);\n                    //    console.log(`${loaded}kb of ${total} kb | ${percent} % `);\n                    //    if(percent>0 && percent<100){\n                    //         setProgress(percent);\n                    //         setCurrentlyUpload(true);\n                    //    }\n\n                    //   }\n\n                }\n                \n                axios.post('http://127.0.0.1:5000/api',formData,options).then(res=>\n                { \n                        console.log(res)\n                        setTimeout(()=>{\n                            console.log(res.data.img);\n                            if(res.data.img != undefined){\n                                setImage('http://127.0.0.1:5000/img/'+res.data.img);\n                            }\n                            if(res.data.vid != undefined){\n                                setVideo('http://127.0.0.1:5000/img/'+res.data.vid);\n                            }\n                                                                              \n                            setProgress(0);\n                            setCurrentlyUpload(false);\n                        },2000)\n                }\n                ).catch((err)=>{\n                    console.log(err);\n                    if(err.response.status === 400){\n                        const errMsg=err.response.data;\n                        console.log(err.response.data.errors)\n                        setError({\n                            found:true,\n                            message:err.response.data.errors\n                        })\n                        if(errMsg){ \n                            console.log(errMsg)\n                        }\n                    }else{\n                        console.log('Another error %s',err)\n                    }\n                });\n\n    }\n    return(\n        <>\n        {\n            (\n                \n                <div className=\"container\">\n                {\n                    (\n                    <>\n                        <h3>Upload Image or Video</h3>\n                        {/* <p>File should be Jpeg,Png,..</p> */}\n                        <Dropzone onDrop={onDrop} multiple={false} maxSize={maxSize}>\n                            {\n                                ({ getRootProps,getInputProps })=>(\n                                    <div {...getRootProps({ className: \"file-container\" })} onChange={handleOnSubmit}>\n                                        <input {...getInputProps()} />\n                                        {/* <img src={Image} alt=\"example\"/> */}\n                                        <p>Drop Image or Video Here </p>\n                                        <input type=\"file\"  onChange={handleOnSubmit} name=\"upfile\"/>\n                                    </div>\n                                )\n                            }\n                           \n                        </Dropzone>\n                        {/* <button type=\"submit\"  className=\"btn-upload\">Upload file</button> */}\n                        \n                     </>  \n                    )\n                }\n    \n             </div>\n            )\n        }       \n        <div className=\"content\">\n            <h4>Result:</h4>\n            <img src={image}/>\n            <ReactPlayer url={video} controls={controls} width='100%' height='100%'/>\n        </div>\n         </>\n    )\n};\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}